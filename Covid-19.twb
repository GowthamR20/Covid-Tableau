<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20203.20.0918.1727                               -->
<workbook original-version='18.1' source-build='2020.3.1 (20203.20.0918.1727)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <_.fcp.MarkAnimation.true...style-rule element='animation'>
      <format attr='animation-on' value='ao-on' />
    </_.fcp.MarkAnimation.true...style-rule>
  </style>
  <datasources>
    <datasource caption='owid-covid-data' inline='true' name='federated.0gq365107envlq1aak0u00p3afod' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='owid-covid-data' name='textscan.0gt32z30t6nsd81bsuv2017n2kg6'>
            <connection class='textscan' directory='D:/Tableau_WorkBench/TheSparkFoundation' filename='owid-covid-data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0gt32z30t6nsd81bsuv2017n2kg6' name='owid-covid-data.csv' table='[owid-covid-data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_AU' separator=','>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='date' name='date' ordinal='3' />
            <column datatype='real' name='total_cases' ordinal='4' />
            <column datatype='real' name='new_cases' ordinal='5' />
            <column datatype='real' name='new_cases_smoothed' ordinal='6' />
            <column datatype='real' name='total_deaths' ordinal='7' />
            <column datatype='real' name='new_deaths' ordinal='8' />
            <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
            <column datatype='real' name='total_cases_per_million' ordinal='10' />
            <column datatype='real' name='new_cases_per_million' ordinal='11' />
            <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
            <column datatype='real' name='total_deaths_per_million' ordinal='13' />
            <column datatype='real' name='new_deaths_per_million' ordinal='14' />
            <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
            <column datatype='string' name='new_tests' ordinal='16' />
            <column datatype='integer' name='total_tests' ordinal='17' />
            <column datatype='string' name='total_tests_per_thousand' ordinal='18' />
            <column datatype='string' name='new_tests_per_thousand' ordinal='19' />
            <column datatype='string' name='new_tests_smoothed' ordinal='20' />
            <column datatype='string' name='new_tests_smoothed_per_thousand' ordinal='21' />
            <column datatype='string' name='tests_per_case' ordinal='22' />
            <column datatype='string' name='positive_rate' ordinal='23' />
            <column datatype='string' name='tests_units' ordinal='24' />
            <column datatype='real' name='stringency_index' ordinal='25' />
            <column datatype='real' name='population' ordinal='26' />
            <column datatype='real' name='population_density' ordinal='27' />
            <column datatype='real' name='median_age' ordinal='28' />
            <column datatype='real' name='aged_65_older' ordinal='29' />
            <column datatype='real' name='aged_70_older' ordinal='30' />
            <column datatype='real' name='gdp_per_capita' ordinal='31' />
            <column datatype='real' name='extreme_poverty' ordinal='32' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='33' />
            <column datatype='real' name='diabetes_prevalence' ordinal='34' />
            <column datatype='real' name='female_smokers' ordinal='35' />
            <column datatype='real' name='male_smokers' ordinal='36' />
            <column datatype='real' name='handwashing_facilities' ordinal='37' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='38' />
            <column datatype='real' name='life_expectancy' ordinal='39' />
            <column datatype='real' name='human_development_index' ordinal='40' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0gt32z30t6nsd81bsuv2017n2kg6' name='owid-covid-data.csv' table='[owid-covid-data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_AU' separator=','>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='date' name='date' ordinal='3' />
            <column datatype='real' name='total_cases' ordinal='4' />
            <column datatype='real' name='new_cases' ordinal='5' />
            <column datatype='real' name='new_cases_smoothed' ordinal='6' />
            <column datatype='real' name='total_deaths' ordinal='7' />
            <column datatype='real' name='new_deaths' ordinal='8' />
            <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
            <column datatype='real' name='total_cases_per_million' ordinal='10' />
            <column datatype='real' name='new_cases_per_million' ordinal='11' />
            <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
            <column datatype='real' name='total_deaths_per_million' ordinal='13' />
            <column datatype='real' name='new_deaths_per_million' ordinal='14' />
            <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
            <column datatype='string' name='new_tests' ordinal='16' />
            <column datatype='integer' name='total_tests' ordinal='17' />
            <column datatype='string' name='total_tests_per_thousand' ordinal='18' />
            <column datatype='string' name='new_tests_per_thousand' ordinal='19' />
            <column datatype='string' name='new_tests_smoothed' ordinal='20' />
            <column datatype='string' name='new_tests_smoothed_per_thousand' ordinal='21' />
            <column datatype='string' name='tests_per_case' ordinal='22' />
            <column datatype='string' name='positive_rate' ordinal='23' />
            <column datatype='string' name='tests_units' ordinal='24' />
            <column datatype='real' name='stringency_index' ordinal='25' />
            <column datatype='real' name='population' ordinal='26' />
            <column datatype='real' name='population_density' ordinal='27' />
            <column datatype='real' name='median_age' ordinal='28' />
            <column datatype='real' name='aged_65_older' ordinal='29' />
            <column datatype='real' name='aged_70_older' ordinal='30' />
            <column datatype='real' name='gdp_per_capita' ordinal='31' />
            <column datatype='real' name='extreme_poverty' ordinal='32' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='33' />
            <column datatype='real' name='diabetes_prevalence' ordinal='34' />
            <column datatype='real' name='female_smokers' ordinal='35' />
            <column datatype='real' name='male_smokers' ordinal='36' />
            <column datatype='real' name='handwashing_facilities' ordinal='37' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='38' />
            <column datatype='real' name='life_expectancy' ordinal='39' />
            <column datatype='real' name='human_development_index' ordinal='40' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_AU&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_6E6DE19FD0454375915EC1B34C38A051]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_6E6DE19FD0454375915EC1B34C38A051]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_6E6DE19FD0454375915EC1B34C38A051]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_6E6DE19FD0454375915EC1B34C38A051]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_6E6DE19FD0454375915EC1B34C38A051]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_cases</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_6E6DE19FD0454375915EC1B34C38A051]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_cases_smoothed</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_6E6DE19FD0454375915EC1B34C38A051]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_6E6DE19FD0454375915EC1B34C38A051]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_deaths</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_6E6DE19FD0454375915EC1B34C38A051]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_deaths_smoothed</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_6E6DE19FD0454375915EC1B34C38A051]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_cases_per_million</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_6E6DE19FD0454375915EC1B34C38A051]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_cases_per_million</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_6E6DE19FD0454375915EC1B34C38A051]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_cases_smoothed_per_million</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_6E6DE19FD0454375915EC1B34C38A051]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_deaths_per_million</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_6E6DE19FD0454375915EC1B34C38A051]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_deaths_per_million</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_6E6DE19FD0454375915EC1B34C38A051]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_deaths_smoothed_per_million</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_6E6DE19FD0454375915EC1B34C38A051]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests</remote-name>
            <remote-type>129</remote-type>
            <local-name>[new_tests]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_tests</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_6E6DE19FD0454375915EC1B34C38A051]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_tests]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_tests</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_6E6DE19FD0454375915EC1B34C38A051]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests_per_thousand</remote-name>
            <remote-type>129</remote-type>
            <local-name>[total_tests_per_thousand]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_tests_per_thousand</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_6E6DE19FD0454375915EC1B34C38A051]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_per_thousand</remote-name>
            <remote-type>129</remote-type>
            <local-name>[new_tests_per_thousand]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_tests_per_thousand</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_6E6DE19FD0454375915EC1B34C38A051]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed</remote-name>
            <remote-type>129</remote-type>
            <local-name>[new_tests_smoothed]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_tests_smoothed</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_6E6DE19FD0454375915EC1B34C38A051]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed_per_thousand</remote-name>
            <remote-type>129</remote-type>
            <local-name>[new_tests_smoothed_per_thousand]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_tests_smoothed_per_thousand</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_6E6DE19FD0454375915EC1B34C38A051]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_per_case</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tests_per_case]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>tests_per_case</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_6E6DE19FD0454375915EC1B34C38A051]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positive_rate</remote-name>
            <remote-type>129</remote-type>
            <local-name>[positive_rate]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>positive_rate</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_6E6DE19FD0454375915EC1B34C38A051]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_units</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tests_units]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>tests_units</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_6E6DE19FD0454375915EC1B34C38A051]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stringency_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stringency_index]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>stringency_index</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_6E6DE19FD0454375915EC1B34C38A051]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_6E6DE19FD0454375915EC1B34C38A051]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population_density]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>population_density</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_6E6DE19FD0454375915EC1B34C38A051]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_age</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_age]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>median_age</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_6E6DE19FD0454375915EC1B34C38A051]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_65_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_65_older]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>aged_65_older</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_6E6DE19FD0454375915EC1B34C38A051]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_70_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_70_older]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>aged_70_older</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_6E6DE19FD0454375915EC1B34C38A051]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gdp_per_capita]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>gdp_per_capita</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_6E6DE19FD0454375915EC1B34C38A051]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extreme_poverty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[extreme_poverty]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>extreme_poverty</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_6E6DE19FD0454375915EC1B34C38A051]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cardiovasc_death_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cardiovasc_death_rate]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>cardiovasc_death_rate</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_6E6DE19FD0454375915EC1B34C38A051]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diabetes_prevalence</remote-name>
            <remote-type>5</remote-type>
            <local-name>[diabetes_prevalence]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>diabetes_prevalence</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_6E6DE19FD0454375915EC1B34C38A051]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>female_smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[female_smokers]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>female_smokers</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_6E6DE19FD0454375915EC1B34C38A051]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>male_smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[male_smokers]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>male_smokers</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_6E6DE19FD0454375915EC1B34C38A051]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>handwashing_facilities</remote-name>
            <remote-type>5</remote-type>
            <local-name>[handwashing_facilities]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>handwashing_facilities</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_6E6DE19FD0454375915EC1B34C38A051]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospital_beds_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hospital_beds_per_thousand]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>hospital_beds_per_thousand</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_6E6DE19FD0454375915EC1B34C38A051]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>life_expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[life_expectancy]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>life_expectancy</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_6E6DE19FD0454375915EC1B34C38A051]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>human_development_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[human_development_index]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>human_development_index</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_6E6DE19FD0454375915EC1B34C38A051]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0gq365107envlq1aak0u00p3afod].[avg:aged_65_older:qk]&quot;' value='Aged 65 Older' />
          <alias key='&quot;[federated.0gq365107envlq1aak0u00p3afod].[avg:aged_70_older:qk]&quot;' value='Aged 70 Older' />
          <alias key='&quot;[federated.0gq365107envlq1aak0u00p3afod].[avg:cardiovasc_death_rate:qk]&quot;' value='Cardiovasc Death Rate' />
          <alias key='&quot;[federated.0gq365107envlq1aak0u00p3afod].[avg:diabetes_prevalence:qk]&quot;' value='Diabetes Prevalence' />
          <alias key='&quot;[federated.0gq365107envlq1aak0u00p3afod].[avg:female_smokers:qk]&quot;' value='Female Smokers' />
          <alias key='&quot;[federated.0gq365107envlq1aak0u00p3afod].[avg:handwashing_facilities:qk]&quot;' value='Handwashing Facilities' />
          <alias key='&quot;[federated.0gq365107envlq1aak0u00p3afod].[avg:life_expectancy:qk]&quot;' value='Life Expectancy' />
          <alias key='&quot;[federated.0gq365107envlq1aak0u00p3afod].[avg:male_smokers:qk]&quot;' value='Male Smokers' />
          <alias key='&quot;[federated.0gq365107envlq1aak0u00p3afod].[avg:median_age:qk]&quot;' value='Median Age' />
        </aliases>
      </column>
      <column datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Calculation_122723128503132161]) / TOTAL(SUM([Calculation_122723128503132161]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' default-format='p0.00%' name='[Calculation2]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([stringency_index]) / TOTAL(SUM([stringency_index]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Rank' datatype='integer' name='[Calculation_122723128484388864]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK_UNIQUE(SUM([total_deaths]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Mortality Index' datatype='real' name='[Calculation_122723128503132161]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([total_deaths]/[total_cases])*100' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='owid-covid-data.csv' datatype='table' name='[__tableau_internal_object_id__].[owid-covid-data.csv_6E6DE19FD0454375915EC1B34C38A051]' role='measure' type='quantitative' />
      <column caption='Aged 65 Older' datatype='real' name='[aged_65_older]' role='measure' type='quantitative' />
      <column caption='Aged 70 Older' datatype='real' name='[aged_70_older]' role='measure' type='quantitative' />
      <column caption='Cardiovasc Death Rate' datatype='real' name='[cardiovasc_death_rate]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Diabetes Prevalence' datatype='real' name='[diabetes_prevalence]' role='measure' type='quantitative' />
      <column caption='Extreme Poverty' datatype='real' name='[extreme_poverty]' role='measure' type='quantitative' />
      <column caption='Female Smokers' datatype='real' name='[female_smokers]' role='measure' type='quantitative' />
      <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
      <column caption='Handwashing Facilities' datatype='real' name='[handwashing_facilities]' role='measure' type='quantitative' />
      <column caption='Hospital Beds Per Thousand' datatype='real' name='[hospital_beds_per_thousand]' role='measure' type='quantitative' />
      <column caption='Human Development Index' datatype='real' name='[human_development_index]' role='measure' type='quantitative' />
      <column caption='Iso Code' datatype='string' name='[iso_code]' role='dimension' type='nominal' />
      <column caption='Life Expectancy' datatype='real' name='[life_expectancy]' role='measure' type='quantitative' />
      <column caption='Country' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Male Smokers' datatype='real' name='[male_smokers]' role='measure' type='quantitative' />
      <column caption='Median Age' datatype='real' name='[median_age]' role='measure' type='quantitative' />
      <column caption='New Cases' datatype='real' name='[new_cases]' role='measure' type='quantitative' />
      <column caption='New Cases Per Million' datatype='real' name='[new_cases_per_million]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed' datatype='real' name='[new_cases_smoothed]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed Per Million' datatype='real' name='[new_cases_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='real' name='[new_deaths]' role='measure' type='quantitative' />
      <column caption='New Deaths Per Million' datatype='real' name='[new_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed' datatype='real' name='[new_deaths_smoothed]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed Per Million' datatype='real' name='[new_deaths_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New Tests' datatype='string' name='[new_tests]' role='dimension' type='nominal' />
      <column caption='New Tests Per Thousand' datatype='string' name='[new_tests_per_thousand]' role='dimension' type='nominal' />
      <column caption='New Tests Smoothed' datatype='string' name='[new_tests_smoothed]' role='dimension' type='nominal' />
      <column caption='New Tests Smoothed Per Thousand' datatype='string' name='[new_tests_smoothed_per_thousand]' role='dimension' type='nominal' />
      <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
      <column caption='Population Density' datatype='real' name='[population_density]' role='measure' type='quantitative' />
      <column caption='Positive Rate' datatype='string' name='[positive_rate]' role='dimension' type='nominal' />
      <column caption='Stringency Index' datatype='real' name='[stringency_index]' role='measure' type='quantitative' />
      <column caption='Tests Per Case' datatype='string' name='[tests_per_case]' role='dimension' type='nominal' />
      <column caption='Tests Units' datatype='string' name='[tests_units]' role='dimension' type='nominal' />
      <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Cases Per Million' datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
      <column caption='Total Deaths Per Million' datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
      <column aggregation='CountD' caption='Total Tests' datatype='integer' name='[total_tests]' role='measure' type='quantitative' />
      <column caption='Total Tests Per Thousand' datatype='string' name='[total_tests_per_thousand]' role='dimension' type='nominal' />
      <column-instance column='[aged_65_older]' derivation='Attribute' name='[attr:aged_65_older:qk]' pivot='key' type='quantitative' />
      <column-instance column='[aged_70_older]' derivation='Attribute' name='[attr:aged_70_older:qk]' pivot='key' type='quantitative' />
      <column-instance column='[aged_65_older]' derivation='Avg' name='[avg:aged_65_older:qk]' pivot='key' type='quantitative' />
      <column-instance column='[aged_70_older]' derivation='Avg' name='[avg:aged_70_older:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cardiovasc_death_rate]' derivation='Avg' name='[avg:cardiovasc_death_rate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[diabetes_prevalence]' derivation='Avg' name='[avg:diabetes_prevalence:qk]' pivot='key' type='quantitative' />
      <column-instance column='[female_smokers]' derivation='Avg' name='[avg:female_smokers:qk]' pivot='key' type='quantitative' />
      <column-instance column='[handwashing_facilities]' derivation='Avg' name='[avg:handwashing_facilities:qk]' pivot='key' type='quantitative' />
      <column-instance column='[life_expectancy]' derivation='Avg' name='[avg:life_expectancy:qk]' pivot='key' type='quantitative' />
      <column-instance column='[male_smokers]' derivation='Avg' name='[avg:male_smokers:qk]' pivot='key' type='quantitative' />
      <column-instance column='[median_age]' derivation='Avg' name='[avg:median_age:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <column-instance column='[total_tests]' derivation='None' name='[none:total_tests:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_122723128503132161]' derivation='Sum' name='[sum:Calculation_122723128503132161:qk]' pivot='key' type='quantitative' />
      <column-instance column='[aged_65_older]' derivation='Sum' name='[sum:aged_65_older:qk]' pivot='key' type='quantitative' />
      <column-instance column='[aged_70_older]' derivation='Sum' name='[sum:aged_70_older:qk]' pivot='key' type='quantitative' />
      <column-instance column='[stringency_index]' derivation='Sum' name='[sum:stringency_index:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:total_tests:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0gq365107envlq1aak0u00p3afod].[attr:aged_65_older:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0gq365107envlq1aak0u00p3afod].[avg:aged_65_older:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0gq365107envlq1aak0u00p3afod].[sum:aged_65_older:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0gq365107envlq1aak0u00p3afod].[sum:stringency_index:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0gq365107envlq1aak0u00p3afod].[sum:Calculation_122723128503132161:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0gq365107envlq1aak0u00p3afod].[sum:total_deaths:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0gq365107envlq1aak0u00p3afod].[attr:aged_70_older:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0gq365107envlq1aak0u00p3afod].[avg:aged_70_older:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0gq365107envlq1aak0u00p3afod].[sum:aged_70_older:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:location:nk]' palette='cyclic_10_0' type='palette'>
            <map to='#1ba3c6'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#1ca4c5'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#1ea6c4'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#1fa8c4'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#1fae82'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#20ad7e'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#20af85'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#21a9c3'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#22abc3'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#22ac7a'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#22b088'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#23b18c'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#24ab76'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#24adc2'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#24b28f'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#26aa72'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#26aec2'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#26b393'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#27b0c1'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#27b496'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#28b599'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#29aa6e'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#29b2c1'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#2ab3c0'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#2ab69d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#2ba96a'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#2bb8a0'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#2cb5c0'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#2da866'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#2db9a4'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#2eb7bf'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#2ebaa7'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#2fa762'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#2fb9bf'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#2fbbaa'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#31a65e'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#31babe'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#31bcae'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#32bcbe'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#32bdb1'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#33a55a'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#33beb5'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#34bebd'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#35a456'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#35bfb8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#35bfbd'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#36c0bb'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#38a452'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#3aa34e'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#3ca24a'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#3ea146'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#40a042'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#429f3e'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#459f3b'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#4ba039'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#4f7cba'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#527bba'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#52a238'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#567abb'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#59a436'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#5a79bb'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#5d79bc'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#5fa535'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#6178bc'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#6577bd'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#66a733'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#6876bd'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#6c76be'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#6da932'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#7075bf'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#7374bf'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#74aa31'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#7773c0'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#7aac2f'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#7b73c0'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#7e72c1'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#81ae2e'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#8271c1'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#8670c2'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#88af2c'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#8970c3'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#8d6fc3'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#8fb12b'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#916ec3'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#956ec3'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#95b32a'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#996ec3'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#9cb528'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#9d6dc2'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#a16dc2'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#a3b627'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#a56dc2'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#a96cc1'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#aab825'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ad6cc1'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#b0ba24'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#b16cc1'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#b46bc0'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#b7bb22'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#b86bc0'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#bc6bc0'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#bdbc21'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#c06abf'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#c0bc21'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#c3bc21'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#c46abf'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#c7bc21'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#c86abf'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#cabc21'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#cc69be'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#cebb21'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#d069be'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#d1bb21'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d469be'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#d4bb21'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#d769bd'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#d8bb21'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#d96abc'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#dbba21'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#dc6bba'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#de6cb9'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#df3029'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#df3327'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#dfba21'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#e0302c'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#e06eb8'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#e1312f'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#e13726'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#e23233'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#e23c24'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#e26fb7'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#e2ba21'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#e43236'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#e44023'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#e53339'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#e54522'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#e570b6'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#e5ba21'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#e6343d'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#e73440'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#e74921'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#e771b5'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#e83543'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#e84e20'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#e9531e'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#e972b4'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#e9b921'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#ea3647'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#eb374a'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#eb571d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#eb73b3'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#ec374d'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#ec5c1c'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#ecb921'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#ed3851'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#ee3954'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#ee601b'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#ee74b1'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#ef651a'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#f03957'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#f06a18'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#f075b0'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#f0b921'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f13a5b'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f23b5e'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#f26e17'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#f276af'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#f33b61'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#f37316'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#f3b921'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#f43e65'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#f44269'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#f477ae'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#f5456d'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#f57715'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#f64971'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#f64c75'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#f67c14'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#f6b921'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#f75079'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#f7547d'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#f778ad'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#f85781'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#f85b85'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#f88113'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f88413'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#f88714'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#f88a15'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#f88d16'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#f89016'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#f89417'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f89718'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#f89a19'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#f89d1a'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f8a01a'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#f8a31b'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#f8a71c'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#f8aa1d'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#f8ad1e'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#f8b01e'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#f8b31f'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f8b620'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#f95f89'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#f979ac'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#fa628d'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#fa6691'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#fb6995'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#fb6d99'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#fb7aab'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#fc719d'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#fc74a1'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#fd78a5'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#fe7caa'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='%null%' />
        <semantic-value key='[County].[Name]' value='%null%' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='owid-covid-data.csv' id='owid-covid-data.csv_6E6DE19FD0454375915EC1B34C38A051'>
            <properties context=''>
              <relation connection='textscan.0gt32z30t6nsd81bsuv2017n2kg6' name='owid-covid-data.csv' table='[owid-covid-data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_AU' separator=','>
                  <column datatype='string' name='iso_code' ordinal='0' />
                  <column datatype='string' name='continent' ordinal='1' />
                  <column datatype='string' name='location' ordinal='2' />
                  <column datatype='date' name='date' ordinal='3' />
                  <column datatype='real' name='total_cases' ordinal='4' />
                  <column datatype='real' name='new_cases' ordinal='5' />
                  <column datatype='real' name='new_cases_smoothed' ordinal='6' />
                  <column datatype='real' name='total_deaths' ordinal='7' />
                  <column datatype='real' name='new_deaths' ordinal='8' />
                  <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
                  <column datatype='real' name='total_cases_per_million' ordinal='10' />
                  <column datatype='real' name='new_cases_per_million' ordinal='11' />
                  <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
                  <column datatype='real' name='total_deaths_per_million' ordinal='13' />
                  <column datatype='real' name='new_deaths_per_million' ordinal='14' />
                  <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
                  <column datatype='string' name='new_tests' ordinal='16' />
                  <column datatype='integer' name='total_tests' ordinal='17' />
                  <column datatype='string' name='total_tests_per_thousand' ordinal='18' />
                  <column datatype='string' name='new_tests_per_thousand' ordinal='19' />
                  <column datatype='string' name='new_tests_smoothed' ordinal='20' />
                  <column datatype='string' name='new_tests_smoothed_per_thousand' ordinal='21' />
                  <column datatype='string' name='tests_per_case' ordinal='22' />
                  <column datatype='string' name='positive_rate' ordinal='23' />
                  <column datatype='string' name='tests_units' ordinal='24' />
                  <column datatype='real' name='stringency_index' ordinal='25' />
                  <column datatype='real' name='population' ordinal='26' />
                  <column datatype='real' name='population_density' ordinal='27' />
                  <column datatype='real' name='median_age' ordinal='28' />
                  <column datatype='real' name='aged_65_older' ordinal='29' />
                  <column datatype='real' name='aged_70_older' ordinal='30' />
                  <column datatype='real' name='gdp_per_capita' ordinal='31' />
                  <column datatype='real' name='extreme_poverty' ordinal='32' />
                  <column datatype='real' name='cardiovasc_death_rate' ordinal='33' />
                  <column datatype='real' name='diabetes_prevalence' ordinal='34' />
                  <column datatype='real' name='female_smokers' ordinal='35' />
                  <column datatype='real' name='male_smokers' ordinal='36' />
                  <column datatype='real' name='handwashing_facilities' ordinal='37' />
                  <column datatype='real' name='hospital_beds_per_thousand' ordinal='38' />
                  <column datatype='real' name='life_expectancy' ordinal='39' />
                  <column datatype='real' name='human_development_index' ordinal='40' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='COVID Government Response (OxBSG)' inline='true' name='federated.128ssux0wnpql6161zac70wnnjrf' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='COVID Government Response (OxBSG)' name='textscan.0vcknzd02cu50c15pisdx0uceg91'>
            <connection class='textscan' directory='D:/Tableau_WorkBench/TheSparkFoundation/covid-19-data-master/public/data/bsg' filename='COVID Government Response (OxBSG).csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0vcknzd02cu50c15pisdx0uceg91' name='COVID Government Response (OxBSG).csv' table='[COVID Government Response (OxBSG)#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_AU' separator=','>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='date' name='Year' ordinal='1' />
            <column datatype='integer' name='School closures (OxBSG)' ordinal='2' />
            <column datatype='integer' name='Workplace Closures (OxBSG)' ordinal='3' />
            <column datatype='integer' name='Cancel public events (OxBSG)' ordinal='4' />
            <column datatype='integer' name='Restrictions on gatherings (OxBSG)' ordinal='5' />
            <column datatype='integer' name='Close public transport (OxBSG)' ordinal='6' />
            <column datatype='integer' name='Stay at home requirements (OxBSG)' ordinal='7' />
            <column datatype='integer' name='Restrictions on internal movement (OxBSG)' ordinal='8' />
            <column datatype='integer' name='International travel controls (OxBSG)' ordinal='9' />
            <column datatype='integer' name='Income support (OxBSG)' ordinal='10' />
            <column datatype='integer' name='Debt/contract relief (OxBSG)' ordinal='11' />
            <column datatype='integer' name='Fiscal measures (OxBSG)' ordinal='12' />
            <column datatype='integer' name='International support (OxBSG)' ordinal='13' />
            <column datatype='integer' name='Public information campaigns (OxBSG)' ordinal='14' />
            <column datatype='integer' name='Testing policy (OxBSG)' ordinal='15' />
            <column datatype='integer' name='Contact tracing (OxBSG)' ordinal='16' />
            <column datatype='integer' name='Emergency investment in health care (OxBSG)' ordinal='17' />
            <column datatype='integer' name='Investment in Vaccines (OxBSG)' ordinal='18' />
            <column datatype='real' name='Stringency Index (OxBSG)' ordinal='19' />
            <column datatype='real' name='Containment and Health Index (OxBSG)' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0vcknzd02cu50c15pisdx0uceg91' name='COVID Government Response (OxBSG).csv' table='[COVID Government Response (OxBSG)#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_AU' separator=','>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='date' name='Year' ordinal='1' />
            <column datatype='integer' name='School closures (OxBSG)' ordinal='2' />
            <column datatype='integer' name='Workplace Closures (OxBSG)' ordinal='3' />
            <column datatype='integer' name='Cancel public events (OxBSG)' ordinal='4' />
            <column datatype='integer' name='Restrictions on gatherings (OxBSG)' ordinal='5' />
            <column datatype='integer' name='Close public transport (OxBSG)' ordinal='6' />
            <column datatype='integer' name='Stay at home requirements (OxBSG)' ordinal='7' />
            <column datatype='integer' name='Restrictions on internal movement (OxBSG)' ordinal='8' />
            <column datatype='integer' name='International travel controls (OxBSG)' ordinal='9' />
            <column datatype='integer' name='Income support (OxBSG)' ordinal='10' />
            <column datatype='integer' name='Debt/contract relief (OxBSG)' ordinal='11' />
            <column datatype='integer' name='Fiscal measures (OxBSG)' ordinal='12' />
            <column datatype='integer' name='International support (OxBSG)' ordinal='13' />
            <column datatype='integer' name='Public information campaigns (OxBSG)' ordinal='14' />
            <column datatype='integer' name='Testing policy (OxBSG)' ordinal='15' />
            <column datatype='integer' name='Contact tracing (OxBSG)' ordinal='16' />
            <column datatype='integer' name='Emergency investment in health care (OxBSG)' ordinal='17' />
            <column datatype='integer' name='Investment in Vaccines (OxBSG)' ordinal='18' />
            <column datatype='real' name='Stringency Index (OxBSG)' ordinal='19' />
            <column datatype='real' name='Containment and Health Index (OxBSG)' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[COVID Government Response (OxBSG).csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_AU&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[COVID Government Response (OxBSG).csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID Government Response (OxBSG).csv_F42F88DC87DF4C4C9EC6C16CFC68A958]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[COVID Government Response (OxBSG).csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID Government Response (OxBSG).csv_F42F88DC87DF4C4C9EC6C16CFC68A958]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>School closures (OxBSG)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[School closures (OxBSG)]</local-name>
            <parent-name>[COVID Government Response (OxBSG).csv]</parent-name>
            <remote-alias>School closures (OxBSG)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID Government Response (OxBSG).csv_F42F88DC87DF4C4C9EC6C16CFC68A958]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Workplace Closures (OxBSG)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Workplace Closures (OxBSG)]</local-name>
            <parent-name>[COVID Government Response (OxBSG).csv]</parent-name>
            <remote-alias>Workplace Closures (OxBSG)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID Government Response (OxBSG).csv_F42F88DC87DF4C4C9EC6C16CFC68A958]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cancel public events (OxBSG)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cancel public events (OxBSG)]</local-name>
            <parent-name>[COVID Government Response (OxBSG).csv]</parent-name>
            <remote-alias>Cancel public events (OxBSG)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID Government Response (OxBSG).csv_F42F88DC87DF4C4C9EC6C16CFC68A958]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Restrictions on gatherings (OxBSG)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Restrictions on gatherings (OxBSG)]</local-name>
            <parent-name>[COVID Government Response (OxBSG).csv]</parent-name>
            <remote-alias>Restrictions on gatherings (OxBSG)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID Government Response (OxBSG).csv_F42F88DC87DF4C4C9EC6C16CFC68A958]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Close public transport (OxBSG)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Close public transport (OxBSG)]</local-name>
            <parent-name>[COVID Government Response (OxBSG).csv]</parent-name>
            <remote-alias>Close public transport (OxBSG)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID Government Response (OxBSG).csv_F42F88DC87DF4C4C9EC6C16CFC68A958]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stay at home requirements (OxBSG)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stay at home requirements (OxBSG)]</local-name>
            <parent-name>[COVID Government Response (OxBSG).csv]</parent-name>
            <remote-alias>Stay at home requirements (OxBSG)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID Government Response (OxBSG).csv_F42F88DC87DF4C4C9EC6C16CFC68A958]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Restrictions on internal movement (OxBSG)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Restrictions on internal movement (OxBSG)]</local-name>
            <parent-name>[COVID Government Response (OxBSG).csv]</parent-name>
            <remote-alias>Restrictions on internal movement (OxBSG)</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID Government Response (OxBSG).csv_F42F88DC87DF4C4C9EC6C16CFC68A958]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>International travel controls (OxBSG)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[International travel controls (OxBSG)]</local-name>
            <parent-name>[COVID Government Response (OxBSG).csv]</parent-name>
            <remote-alias>International travel controls (OxBSG)</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID Government Response (OxBSG).csv_F42F88DC87DF4C4C9EC6C16CFC68A958]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Income support (OxBSG)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Income support (OxBSG)]</local-name>
            <parent-name>[COVID Government Response (OxBSG).csv]</parent-name>
            <remote-alias>Income support (OxBSG)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID Government Response (OxBSG).csv_F42F88DC87DF4C4C9EC6C16CFC68A958]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Debt/contract relief (OxBSG)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Debt/contract relief (OxBSG)]</local-name>
            <parent-name>[COVID Government Response (OxBSG).csv]</parent-name>
            <remote-alias>Debt/contract relief (OxBSG)</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID Government Response (OxBSG).csv_F42F88DC87DF4C4C9EC6C16CFC68A958]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fiscal measures (OxBSG)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Fiscal measures (OxBSG)]</local-name>
            <parent-name>[COVID Government Response (OxBSG).csv]</parent-name>
            <remote-alias>Fiscal measures (OxBSG)</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID Government Response (OxBSG).csv_F42F88DC87DF4C4C9EC6C16CFC68A958]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>International support (OxBSG)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[International support (OxBSG)]</local-name>
            <parent-name>[COVID Government Response (OxBSG).csv]</parent-name>
            <remote-alias>International support (OxBSG)</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID Government Response (OxBSG).csv_F42F88DC87DF4C4C9EC6C16CFC68A958]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Public information campaigns (OxBSG)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Public information campaigns (OxBSG)]</local-name>
            <parent-name>[COVID Government Response (OxBSG).csv]</parent-name>
            <remote-alias>Public information campaigns (OxBSG)</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID Government Response (OxBSG).csv_F42F88DC87DF4C4C9EC6C16CFC68A958]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Testing policy (OxBSG)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Testing policy (OxBSG)]</local-name>
            <parent-name>[COVID Government Response (OxBSG).csv]</parent-name>
            <remote-alias>Testing policy (OxBSG)</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID Government Response (OxBSG).csv_F42F88DC87DF4C4C9EC6C16CFC68A958]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Contact tracing (OxBSG)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Contact tracing (OxBSG)]</local-name>
            <parent-name>[COVID Government Response (OxBSG).csv]</parent-name>
            <remote-alias>Contact tracing (OxBSG)</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID Government Response (OxBSG).csv_F42F88DC87DF4C4C9EC6C16CFC68A958]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Emergency investment in health care (OxBSG)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Emergency investment in health care (OxBSG)]</local-name>
            <parent-name>[COVID Government Response (OxBSG).csv]</parent-name>
            <remote-alias>Emergency investment in health care (OxBSG)</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID Government Response (OxBSG).csv_F42F88DC87DF4C4C9EC6C16CFC68A958]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Investment in Vaccines (OxBSG)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Investment in Vaccines (OxBSG)]</local-name>
            <parent-name>[COVID Government Response (OxBSG).csv]</parent-name>
            <remote-alias>Investment in Vaccines (OxBSG)</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID Government Response (OxBSG).csv_F42F88DC87DF4C4C9EC6C16CFC68A958]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stringency Index (OxBSG)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Stringency Index (OxBSG)]</local-name>
            <parent-name>[COVID Government Response (OxBSG).csv]</parent-name>
            <remote-alias>Stringency Index (OxBSG)</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID Government Response (OxBSG).csv_F42F88DC87DF4C4C9EC6C16CFC68A958]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Containment and Health Index (OxBSG)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Containment and Health Index (OxBSG)]</local-name>
            <parent-name>[COVID Government Response (OxBSG).csv]</parent-name>
            <remote-alias>Containment and Health Index (OxBSG)</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID Government Response (OxBSG).csv_F42F88DC87DF4C4C9EC6C16CFC68A958]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Cancel public events (OxBSG)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Close public transport (OxBSG)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Contact tracing (OxBSG)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Containment and Health Index (OxBSG)]' role='measure' type='quantitative' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Debt/contract relief (OxBSG)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Emergency investment in health care (OxBSG)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Fiscal measures (OxBSG)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Income support (OxBSG)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[International support (OxBSG)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[International travel controls (OxBSG)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Investment in Vaccines (OxBSG)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Public information campaigns (OxBSG)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Restrictions on gatherings (OxBSG)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Restrictions on internal movement (OxBSG)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[School closures (OxBSG)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Stay at home requirements (OxBSG)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Stringency Index (OxBSG)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Testing policy (OxBSG)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Workplace Closures (OxBSG)]' role='measure' type='quantitative' />
      <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
      <_.fcp.ObjectModelTableType.true...column caption='COVID Government Response (OxBSG).csv' datatype='table' name='[__tableau_internal_object_id__].[COVID Government Response (OxBSG).csv_F42F88DC87DF4C4C9EC6C16CFC68A958]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[COVID Government Response (OxBSG).csv_F42F88DC87DF4C4C9EC6C16CFC68A958]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:COVID Government Response (OxBSG).csv_F42F88DC87DF4C4C9EC6C16CFC68A958:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Year]' derivation='Month' name='[mn:Year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Cancel public events (OxBSG)]' derivation='Sum' name='[sum:Cancel public events (OxBSG):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Close public transport (OxBSG)]' derivation='Sum' name='[sum:Close public transport (OxBSG):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Contact tracing (OxBSG)]' derivation='Sum' name='[sum:Contact tracing (OxBSG):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Containment and Health Index (OxBSG)]' derivation='Sum' name='[sum:Containment and Health Index (OxBSG):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Debt/contract relief (OxBSG)]' derivation='Sum' name='[sum:Debt/contract relief (OxBSG):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Emergency investment in health care (OxBSG)]' derivation='Sum' name='[sum:Emergency investment in health care (OxBSG):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Fiscal measures (OxBSG)]' derivation='Sum' name='[sum:Fiscal measures (OxBSG):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Income support (OxBSG)]' derivation='Sum' name='[sum:Income support (OxBSG):qk]' pivot='key' type='quantitative' />
      <column-instance column='[International support (OxBSG)]' derivation='Sum' name='[sum:International support (OxBSG):qk]' pivot='key' type='quantitative' />
      <column-instance column='[International travel controls (OxBSG)]' derivation='Sum' name='[sum:International travel controls (OxBSG):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Investment in Vaccines (OxBSG)]' derivation='Sum' name='[sum:Investment in Vaccines (OxBSG):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Public information campaigns (OxBSG)]' derivation='Sum' name='[sum:Public information campaigns (OxBSG):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Restrictions on gatherings (OxBSG)]' derivation='Sum' name='[sum:Restrictions on gatherings (OxBSG):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Restrictions on internal movement (OxBSG)]' derivation='Sum' name='[sum:Restrictions on internal movement (OxBSG):qk]' pivot='key' type='quantitative' />
      <column-instance column='[School closures (OxBSG)]' derivation='Sum' name='[sum:School closures (OxBSG):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Stay at home requirements (OxBSG)]' derivation='Sum' name='[sum:Stay at home requirements (OxBSG):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Stringency Index (OxBSG)]' derivation='Sum' name='[sum:Stringency Index (OxBSG):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Testing policy (OxBSG)]' derivation='Sum' name='[sum:Testing policy (OxBSG):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Workplace Closures (OxBSG)]' derivation='Sum' name='[sum:Workplace Closures (OxBSG):qk]' pivot='key' type='quantitative' />
      <group caption='Action (Country)' hidden='true' name='[Action (Country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Year))' hidden='true' name='[Action (MONTH(Year))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[mn:Year:ok]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' palette='jewel_bright_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.128ssux0wnpql6161zac70wnnjrf].[sum:Income support (OxBSG):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.128ssux0wnpql6161zac70wnnjrf].[sum:Containment and Health Index (OxBSG):qk]&quot;</bucket>
            </map>
            <map to='#5fbb68'>
              <bucket>&quot;[federated.128ssux0wnpql6161zac70wnnjrf].[sum:Stay at home requirements (OxBSG):qk]&quot;</bucket>
            </map>
            <map to='#64cdcc'>
              <bucket>&quot;[federated.128ssux0wnpql6161zac70wnnjrf].[sum:Workplace Closures (OxBSG):qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.128ssux0wnpql6161zac70wnnjrf].[sum:Public information campaigns (OxBSG):qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.128ssux0wnpql6161zac70wnnjrf].[sum:International support (OxBSG):qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.128ssux0wnpql6161zac70wnnjrf].[sum:Debt/contract relief (OxBSG):qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.128ssux0wnpql6161zac70wnnjrf].[sum:Testing policy (OxBSG):qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.128ssux0wnpql6161zac70wnnjrf].[__tableau_internal_object_id__].[cnt:COVID Government Response (OxBSG).csv_F42F88DC87DF4C4C9EC6C16CFC68A958:qk]&quot;</bucket>
            </map>
            <map to='#a2ceaa'>
              <bucket>&quot;[federated.128ssux0wnpql6161zac70wnnjrf].[sum:Contact tracing (OxBSG):qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.128ssux0wnpql6161zac70wnnjrf].[sum:Emergency investment in health care (OxBSG):qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.128ssux0wnpql6161zac70wnnjrf].[sum:Restrictions on gatherings (OxBSG):qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.128ssux0wnpql6161zac70wnnjrf].[sum:Stringency Index (OxBSG):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.128ssux0wnpql6161zac70wnnjrf].[sum:International travel controls (OxBSG):qk]&quot;</bucket>
            </map>
            <map to='#eb1e2c'>
              <bucket>&quot;[federated.128ssux0wnpql6161zac70wnnjrf].[sum:Cancel public events (OxBSG):qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.128ssux0wnpql6161zac70wnnjrf].[sum:Fiscal measures (OxBSG):qk]&quot;</bucket>
            </map>
            <map to='#f9a729'>
              <bucket>&quot;[federated.128ssux0wnpql6161zac70wnnjrf].[sum:Restrictions on internal movement (OxBSG):qk]&quot;</bucket>
            </map>
            <map to='#f9d23c'>
              <bucket>&quot;[federated.128ssux0wnpql6161zac70wnnjrf].[sum:School closures (OxBSG):qk]&quot;</bucket>
            </map>
            <map to='#fd6f30'>
              <bucket>&quot;[federated.128ssux0wnpql6161zac70wnnjrf].[sum:Close public transport (OxBSG):qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.128ssux0wnpql6161zac70wnnjrf].[sum:Investment in Vaccines (OxBSG):qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Australia&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='COVID Government Response (OxBSG).csv' id='COVID Government Response (OxBSG).csv_F42F88DC87DF4C4C9EC6C16CFC68A958'>
            <properties context=''>
              <relation connection='textscan.0vcknzd02cu50c15pisdx0uceg91' name='COVID Government Response (OxBSG).csv' table='[COVID Government Response (OxBSG)#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_AU' separator=','>
                  <column datatype='string' name='Country' ordinal='0' />
                  <column datatype='date' name='Year' ordinal='1' />
                  <column datatype='integer' name='School closures (OxBSG)' ordinal='2' />
                  <column datatype='integer' name='Workplace Closures (OxBSG)' ordinal='3' />
                  <column datatype='integer' name='Cancel public events (OxBSG)' ordinal='4' />
                  <column datatype='integer' name='Restrictions on gatherings (OxBSG)' ordinal='5' />
                  <column datatype='integer' name='Close public transport (OxBSG)' ordinal='6' />
                  <column datatype='integer' name='Stay at home requirements (OxBSG)' ordinal='7' />
                  <column datatype='integer' name='Restrictions on internal movement (OxBSG)' ordinal='8' />
                  <column datatype='integer' name='International travel controls (OxBSG)' ordinal='9' />
                  <column datatype='integer' name='Income support (OxBSG)' ordinal='10' />
                  <column datatype='integer' name='Debt/contract relief (OxBSG)' ordinal='11' />
                  <column datatype='integer' name='Fiscal measures (OxBSG)' ordinal='12' />
                  <column datatype='integer' name='International support (OxBSG)' ordinal='13' />
                  <column datatype='integer' name='Public information campaigns (OxBSG)' ordinal='14' />
                  <column datatype='integer' name='Testing policy (OxBSG)' ordinal='15' />
                  <column datatype='integer' name='Contact tracing (OxBSG)' ordinal='16' />
                  <column datatype='integer' name='Emergency investment in health care (OxBSG)' ordinal='17' />
                  <column datatype='integer' name='Investment in Vaccines (OxBSG)' ordinal='18' />
                  <column datatype='real' name='Stringency Index (OxBSG)' ordinal='19' />
                  <column datatype='real' name='Containment and Health Index (OxBSG)' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Google Mobility Trends (2020)' inline='true' name='federated.10bvf8y179bd7314hh6070jvl1is' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Google Mobility Trends (2020)' name='textscan.1djgyj41n7wg1b182jz771xvu1g4'>
            <connection class='textscan' directory='D:/Tableau_WorkBench/TheSparkFoundation/covid-19-data-master/public/data/gmobility' filename='Google Mobility Trends (2020).csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1djgyj41n7wg1b182jz771xvu1g4' name='Google Mobility Trends (2020).csv' table='[Google Mobility Trends (2020)#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_AU' separator=','>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='date' name='Year' ordinal='1' />
            <column datatype='real' name='Retail &amp; Recreation' ordinal='2' />
            <column datatype='real' name='Grocery &amp; Pharmacy' ordinal='3' />
            <column datatype='real' name='Parks' ordinal='4' />
            <column datatype='real' name='Transit Stations' ordinal='5' />
            <column datatype='real' name='Workplaces' ordinal='6' />
            <column datatype='real' name='Residential' ordinal='7' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1djgyj41n7wg1b182jz771xvu1g4' name='Google Mobility Trends (2020).csv' table='[Google Mobility Trends (2020)#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_AU' separator=','>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='date' name='Year' ordinal='1' />
            <column datatype='real' name='Retail &amp; Recreation' ordinal='2' />
            <column datatype='real' name='Grocery &amp; Pharmacy' ordinal='3' />
            <column datatype='real' name='Parks' ordinal='4' />
            <column datatype='real' name='Transit Stations' ordinal='5' />
            <column datatype='real' name='Workplaces' ordinal='6' />
            <column datatype='real' name='Residential' ordinal='7' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Google Mobility Trends (2020).csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_AU&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Google Mobility Trends (2020).csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Google Mobility Trends (2020).csv_4EDFD87D67FC4B6AA8D6DDFD86D87F44]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Google Mobility Trends (2020).csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Google Mobility Trends (2020).csv_4EDFD87D67FC4B6AA8D6DDFD86D87F44]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Retail &amp; Recreation</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Retail &amp; Recreation]</local-name>
            <parent-name>[Google Mobility Trends (2020).csv]</parent-name>
            <remote-alias>Retail &amp; Recreation</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Google Mobility Trends (2020).csv_4EDFD87D67FC4B6AA8D6DDFD86D87F44]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Grocery &amp; Pharmacy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Grocery &amp; Pharmacy]</local-name>
            <parent-name>[Google Mobility Trends (2020).csv]</parent-name>
            <remote-alias>Grocery &amp; Pharmacy</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Google Mobility Trends (2020).csv_4EDFD87D67FC4B6AA8D6DDFD86D87F44]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Parks</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Parks]</local-name>
            <parent-name>[Google Mobility Trends (2020).csv]</parent-name>
            <remote-alias>Parks</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Google Mobility Trends (2020).csv_4EDFD87D67FC4B6AA8D6DDFD86D87F44]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transit Stations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Transit Stations]</local-name>
            <parent-name>[Google Mobility Trends (2020).csv]</parent-name>
            <remote-alias>Transit Stations</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Google Mobility Trends (2020).csv_4EDFD87D67FC4B6AA8D6DDFD86D87F44]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Workplaces</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Workplaces]</local-name>
            <parent-name>[Google Mobility Trends (2020).csv]</parent-name>
            <remote-alias>Workplaces</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Google Mobility Trends (2020).csv_4EDFD87D67FC4B6AA8D6DDFD86D87F44]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Residential</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Residential]</local-name>
            <parent-name>[Google Mobility Trends (2020).csv]</parent-name>
            <remote-alias>Residential</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Google Mobility Trends (2020).csv_4EDFD87D67FC4B6AA8D6DDFD86D87F44]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='real' name='[Grocery &amp; Pharmacy]' role='measure' type='quantitative' />
      <column datatype='real' name='[Parks]' role='measure' type='quantitative' />
      <column datatype='real' name='[Residential]' role='measure' type='quantitative' />
      <column datatype='real' name='[Retail &amp; Recreation]' role='measure' type='quantitative' />
      <column datatype='real' name='[Transit Stations]' role='measure' type='quantitative' />
      <column datatype='real' name='[Workplaces]' role='measure' type='quantitative' />
      <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
      <_.fcp.ObjectModelTableType.true...column caption='Google Mobility Trends (2020).csv' datatype='table' name='[__tableau_internal_object_id__].[Google Mobility Trends (2020).csv_4EDFD87D67FC4B6AA8D6DDFD86D87F44]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[Google Mobility Trends (2020).csv_4EDFD87D67FC4B6AA8D6DDFD86D87F44]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Google Mobility Trends (2020).csv_4EDFD87D67FC4B6AA8D6DDFD86D87F44:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Year]' derivation='Month' name='[mn:Year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Grocery &amp; Pharmacy]' derivation='Sum' name='[sum:Grocery &amp; Pharmacy:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Parks]' derivation='Sum' name='[sum:Parks:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Residential]' derivation='Sum' name='[sum:Residential:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Retail &amp; Recreation]' derivation='Sum' name='[sum:Retail &amp; Recreation:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Transit Stations]' derivation='Sum' name='[sum:Transit Stations:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Workplaces]' derivation='Sum' name='[sum:Workplaces:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Country)' hidden='true' name='[Action (Country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Year))' hidden='true' name='[Action (MONTH(Year))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[mn:Year:ok]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.10bvf8y179bd7314hh6070jvl1is].[sum:Grocery &amp; Pharmacy:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.10bvf8y179bd7314hh6070jvl1is].[sum:Transit Stations:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.10bvf8y179bd7314hh6070jvl1is].[sum:Retail &amp; Recreation:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.10bvf8y179bd7314hh6070jvl1is].[__tableau_internal_object_id__].[cnt:Google Mobility Trends (2020).csv_4EDFD87D67FC4B6AA8D6DDFD86D87F44:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.10bvf8y179bd7314hh6070jvl1is].[sum:Residential:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.10bvf8y179bd7314hh6070jvl1is].[sum:Workplaces:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.10bvf8y179bd7314hh6070jvl1is].[sum:Parks:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Australia&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Google Mobility Trends (2020).csv' id='Google Mobility Trends (2020).csv_4EDFD87D67FC4B6AA8D6DDFD86D87F44'>
            <properties context=''>
              <relation connection='textscan.1djgyj41n7wg1b182jz771xvu1g4' name='Google Mobility Trends (2020).csv' table='[Google Mobility Trends (2020)#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_AU' separator=','>
                  <column datatype='string' name='Country' ordinal='0' />
                  <column datatype='date' name='Year' ordinal='1' />
                  <column datatype='real' name='Retail &amp; Recreation' ordinal='2' />
                  <column datatype='real' name='Grocery &amp; Pharmacy' ordinal='3' />
                  <column datatype='real' name='Parks' ordinal='4' />
                  <column datatype='real' name='Transit Stations' ordinal='5' />
                  <column datatype='real' name='Workplaces' ordinal='6' />
                  <column datatype='real' name='Residential' ordinal='7' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Affect on Public' type='sheet' worksheet='Mobility Rate' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Affect on Public' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Affect on Public' type='sheet' worksheet='Stringency vs Mortality' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Affect on Public' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Affect on Public' type='sheet' worksheet='Government Response Measures to COVID-19' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Affect on Public' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Factors Influencing COVID-19'>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data' name='federated.0gq365107envlq1aak0u00p3afod' />
          </datasources>
          <datasource-dependencies datasource='federated.0gq365107envlq1aak0u00p3afod'>
            <column caption='Aged 65 Older' datatype='real' name='[aged_65_older]' role='measure' type='quantitative' />
            <column caption='Aged 70 Older' datatype='real' name='[aged_70_older]' role='measure' type='quantitative' />
            <column-instance column='[aged_65_older]' derivation='Avg' name='[avg:aged_65_older:qk]' pivot='key' type='quantitative' />
            <column-instance column='[aged_70_older]' derivation='Avg' name='[avg:aged_70_older:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cardiovasc_death_rate]' derivation='Avg' name='[avg:cardiovasc_death_rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[diabetes_prevalence]' derivation='Avg' name='[avg:diabetes_prevalence:qk]' pivot='key' type='quantitative' />
            <column-instance column='[female_smokers]' derivation='Avg' name='[avg:female_smokers:qk]' pivot='key' type='quantitative' />
            <column-instance column='[handwashing_facilities]' derivation='Avg' name='[avg:handwashing_facilities:qk]' pivot='key' type='quantitative' />
            <column-instance column='[life_expectancy]' derivation='Avg' name='[avg:life_expectancy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[male_smokers]' derivation='Avg' name='[avg:male_smokers:qk]' pivot='key' type='quantitative' />
            <column-instance column='[median_age]' derivation='Avg' name='[avg:median_age:qk]' pivot='key' type='quantitative' />
            <column caption='Cardiovasc Death Rate' datatype='real' name='[cardiovasc_death_rate]' role='measure' type='quantitative' />
            <column caption='Diabetes Prevalence' datatype='real' name='[diabetes_prevalence]' role='measure' type='quantitative' />
            <column caption='Female Smokers' datatype='real' name='[female_smokers]' role='measure' type='quantitative' />
            <column caption='Handwashing Facilities' datatype='real' name='[handwashing_facilities]' role='measure' type='quantitative' />
            <column caption='Life Expectancy' datatype='real' name='[life_expectancy]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Male Smokers' datatype='real' name='[male_smokers]' role='measure' type='quantitative' />
            <column caption='Median Age' datatype='real' name='[median_age]' role='measure' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gq365107envlq1aak0u00p3afod].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0gq365107envlq1aak0u00p3afod].[avg:aged_65_older:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0gq365107envlq1aak0u00p3afod].[avg:aged_70_older:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0gq365107envlq1aak0u00p3afod].[avg:median_age:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0gq365107envlq1aak0u00p3afod].[avg:life_expectancy:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0gq365107envlq1aak0u00p3afod].[avg:cardiovasc_death_rate:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0gq365107envlq1aak0u00p3afod].[avg:diabetes_prevalence:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0gq365107envlq1aak0u00p3afod].[avg:female_smokers:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0gq365107envlq1aak0u00p3afod].[avg:male_smokers:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0gq365107envlq1aak0u00p3afod].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0gq365107envlq1aak0u00p3afod].[avg:aged_65_older:qk]&quot;</bucket>
              <bucket>&quot;[federated.0gq365107envlq1aak0u00p3afod].[avg:aged_70_older:qk]&quot;</bucket>
              <bucket>&quot;[federated.0gq365107envlq1aak0u00p3afod].[avg:median_age:qk]&quot;</bucket>
              <bucket>&quot;[federated.0gq365107envlq1aak0u00p3afod].[avg:life_expectancy:qk]&quot;</bucket>
              <bucket>&quot;[federated.0gq365107envlq1aak0u00p3afod].[avg:cardiovasc_death_rate:qk]&quot;</bucket>
              <bucket>&quot;[federated.0gq365107envlq1aak0u00p3afod].[avg:diabetes_prevalence:qk]&quot;</bucket>
              <bucket>&quot;[federated.0gq365107envlq1aak0u00p3afod].[avg:female_smokers:qk]&quot;</bucket>
              <bucket>&quot;[federated.0gq365107envlq1aak0u00p3afod].[avg:male_smokers:qk]&quot;</bucket>
              <bucket>&quot;[federated.0gq365107envlq1aak0u00p3afod].[avg:handwashing_facilities:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0gq365107envlq1aak0u00p3afod].[none:location:nk]' filter-group='5'>
            <groupfilter function='member' level='[none:location:nk]' member='&quot;Belize&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
            <target field='[federated.0gq365107envlq1aak0u00p3afod].[none:location:nk]' />
          </filter>
          <slices>
            <column>[federated.0gq365107envlq1aak0u00p3afod].[:Measure Names]</column>
            <column>[federated.0gq365107envlq1aak0u00p3afod].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.0gq365107envlq1aak0u00p3afod].[:Measure Names]' value='41' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0gq365107envlq1aak0u00p3afod].[:Measure Names]' value='140' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0gq365107envlq1aak0u00p3afod].[Multiple Values]' palette='blue_teal_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gq365107envlq1aak0u00p3afod].[Multiple Values]' />
              <text column='[federated.0gq365107envlq1aak0u00p3afod].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#000000' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0gq365107envlq1aak0u00p3afod].[Multiple Values]</rows>
        <cols>[federated.0gq365107envlq1aak0u00p3afod].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{B45147A8-8B4A-44EB-96AA-105CA66260CA}' />
    </worksheet>
    <worksheet name='GDP'>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data' name='federated.0gq365107envlq1aak0u00p3afod' />
          </datasources>
          <datasource-dependencies datasource='federated.0gq365107envlq1aak0u00p3afod'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[gdp_per_capita]' derivation='Sum' name='[sum:gdp_per_capita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0gq365107envlq1aak0u00p3afod].[tmn:date:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0gq365107envlq1aak0u00p3afod].[none:location:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0gq365107envlq1aak0u00p3afod].[none:location:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0gq365107envlq1aak0u00p3afod].[sum:gdp_per_capita:qk]</rows>
        <cols>[federated.0gq365107envlq1aak0u00p3afod].[tmn:date:qk]</cols>
      </table>
      <simple-id uuid='{3DF7CD49-8826-486F-A7A9-3916E67E27DE}' />
    </worksheet>
    <worksheet name='Government Response Measures to COVID-19'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID Government Response (OxBSG)' name='federated.128ssux0wnpql6161zac70wnnjrf' />
            <datasource caption='owid-covid-data' name='federated.0gq365107envlq1aak0u00p3afod' />
          </datasources>
          <datasource-dependencies datasource='federated.0gq365107envlq1aak0u00p3afod'>
            <column caption='Country' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.128ssux0wnpql6161zac70wnnjrf'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Restrictions on internal movement (OxBSG)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[School closures (OxBSG)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Stay at home requirements (OxBSG)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Workplace Closures (OxBSG)]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Year]' derivation='Month' name='[mn:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Restrictions on internal movement (OxBSG)]' derivation='Sum' name='[sum:Restrictions on internal movement (OxBSG):qk]' pivot='key' type='quantitative' />
            <column-instance column='[School closures (OxBSG)]' derivation='Sum' name='[sum:School closures (OxBSG):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Stay at home requirements (OxBSG)]' derivation='Sum' name='[sum:Stay at home requirements (OxBSG):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Workplace Closures (OxBSG)]' derivation='Sum' name='[sum:Workplace Closures (OxBSG):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gq365107envlq1aak0u00p3afod].[none:location:nk]' filter-group='5'>
            <groupfilter function='member' level='[none:location:nk]' member='&quot;Belize&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
            <target field='[federated.128ssux0wnpql6161zac70wnnjrf].[none:Country:nk]' />
          </filter>
          <filter class='categorical' column='[federated.128ssux0wnpql6161zac70wnnjrf].[:Measure Names]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.128ssux0wnpql6161zac70wnnjrf].[sum:Restrictions on internal movement (OxBSG):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.128ssux0wnpql6161zac70wnnjrf].[sum:School closures (OxBSG):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.128ssux0wnpql6161zac70wnnjrf].[sum:Stay at home requirements (OxBSG):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.128ssux0wnpql6161zac70wnnjrf].[sum:Workplace Closures (OxBSG):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.128ssux0wnpql6161zac70wnnjrf].[mn:Year:ok]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[mn:Year:ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[mn:Year:ok]' member='%null%' />
                <groupfilter function='member' level='[mn:Year:ok]' member='1' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.128ssux0wnpql6161zac70wnnjrf].[:Measure Names]</column>
            <column>[federated.0gq365107envlq1aak0u00p3afod].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.128ssux0wnpql6161zac70wnnjrf].[Multiple Values]' scope='rows' value='Rate' />
            <format attr='width' field='[federated.128ssux0wnpql6161zac70wnnjrf].[Multiple Values]' value='58' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.128ssux0wnpql6161zac70wnnjrf].[mn:Year:ok]' value='88' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.128ssux0wnpql6161zac70wnnjrf].[:Measure Names]' value='Government Measures&#10;'>
              <formatted-text>
                <run>Government Measures&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.128ssux0wnpql6161zac70wnnjrf].[:Measure Names]' value='Government Measures'>
              <formatted-text>
                <run>Government Measures</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.128ssux0wnpql6161zac70wnnjrf].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.128ssux0wnpql6161zac70wnnjrf].[Multiple Values]</rows>
        <cols>[federated.128ssux0wnpql6161zac70wnnjrf].[mn:Year:ok]</cols>
      </table>
      <simple-id uuid='{6FB60468-B474-4B80-AA47-064F1D0DBB4F}' />
    </worksheet>
    <worksheet name='Mobility Rate'>
      <table>
        <view>
          <datasources>
            <datasource caption='Google Mobility Trends (2020)' name='federated.10bvf8y179bd7314hh6070jvl1is' />
            <datasource caption='owid-covid-data' name='federated.0gq365107envlq1aak0u00p3afod' />
          </datasources>
          <datasource-dependencies datasource='federated.0gq365107envlq1aak0u00p3afod'>
            <column caption='Country' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.10bvf8y179bd7314hh6070jvl1is'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Grocery &amp; Pharmacy]' role='measure' type='quantitative' />
            <column datatype='real' name='[Parks]' role='measure' type='quantitative' />
            <column datatype='real' name='[Residential]' role='measure' type='quantitative' />
            <column datatype='real' name='[Retail &amp; Recreation]' role='measure' type='quantitative' />
            <column datatype='real' name='[Transit Stations]' role='measure' type='quantitative' />
            <column datatype='real' name='[Workplaces]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Year]' derivation='Month' name='[mn:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Grocery &amp; Pharmacy]' derivation='Sum' name='[sum:Grocery &amp; Pharmacy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Parks]' derivation='Sum' name='[sum:Parks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Residential]' derivation='Sum' name='[sum:Residential:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Retail &amp; Recreation]' derivation='Sum' name='[sum:Retail &amp; Recreation:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Transit Stations]' derivation='Sum' name='[sum:Transit Stations:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Workplaces]' derivation='Sum' name='[sum:Workplaces:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gq365107envlq1aak0u00p3afod].[none:location:nk]' filter-group='5'>
            <groupfilter function='member' level='[none:location:nk]' member='&quot;Belize&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
            <target field='[federated.10bvf8y179bd7314hh6070jvl1is].[none:Country:nk]' />
          </filter>
          <filter class='categorical' column='[federated.10bvf8y179bd7314hh6070jvl1is].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.10bvf8y179bd7314hh6070jvl1is].[sum:Grocery &amp; Pharmacy:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.10bvf8y179bd7314hh6070jvl1is].[sum:Parks:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.10bvf8y179bd7314hh6070jvl1is].[sum:Residential:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.10bvf8y179bd7314hh6070jvl1is].[sum:Retail &amp; Recreation:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.10bvf8y179bd7314hh6070jvl1is].[sum:Transit Stations:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.10bvf8y179bd7314hh6070jvl1is].[sum:Workplaces:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.10bvf8y179bd7314hh6070jvl1is].[Action (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.10bvf8y179bd7314hh6070jvl1is].[Action (MONTH(Year))]'>
            <groupfilter function='level-members' level='[mn:Year:ok]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.10bvf8y179bd7314hh6070jvl1is].[:Measure Names]</column>
            <column>[federated.10bvf8y179bd7314hh6070jvl1is].[Action (MONTH(Year))]</column>
            <column>[federated.10bvf8y179bd7314hh6070jvl1is].[Action (Country)]</column>
            <column>[federated.0gq365107envlq1aak0u00p3afod].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.10bvf8y179bd7314hh6070jvl1is].[mn:Year:ok]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.10bvf8y179bd7314hh6070jvl1is].[Multiple Values]' scope='rows' value='Rate' />
            <format attr='width' field='[federated.10bvf8y179bd7314hh6070jvl1is].[Multiple Values]' value='73' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.10bvf8y179bd7314hh6070jvl1is].[mn:Year:ok]' value='95' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.10bvf8y179bd7314hh6070jvl1is].[:Measure Names]' value='Area of Mobility'>
              <formatted-text>
                <run>Area of Mobility</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.10bvf8y179bd7314hh6070jvl1is].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.31784531474113464' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.10bvf8y179bd7314hh6070jvl1is].[Multiple Values]</rows>
        <cols>[federated.10bvf8y179bd7314hh6070jvl1is].[mn:Year:ok]</cols>
        <pages>
          <column>[federated.10bvf8y179bd7314hh6070jvl1is].[mn:Year:ok]</column>
        </pages>
        <page-trail-options enabled='true' lines='true' mark-type='all' marks='false' />
      </table>
      <simple-id uuid='{5514DF32-CEC1-4014-8E69-1ACA2C274797}' />
    </worksheet>
    <worksheet name='New Cases'>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data' name='federated.0gq365107envlq1aak0u00p3afod' />
          </datasources>
          <datasource-dependencies datasource='federated.0gq365107envlq1aak0u00p3afod'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[new_cases]' derivation='Sum' forecast-column-base='[sum:new_cases:qk]' forecast-column-type='forecast-value' name='[fVal:sum:new_cases:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='New Cases' datatype='real' name='[new_cases]' role='measure' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[new_cases]' derivation='Sum' name='[sum:new_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gq365107envlq1aak0u00p3afod].[none:location:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0gq365107envlq1aak0u00p3afod].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0gq365107envlq1aak0u00p3afod].[fVal:sum:new_cases:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gq365107envlq1aak0u00p3afod].[fVal:sum:new_cases:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0gq365107envlq1aak0u00p3afod].[fVal:sum:new_cases:qk]</rows>
        <cols>[federated.0gq365107envlq1aak0u00p3afod].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{28EE2C3B-FBEE-4D1F-BC1B-7CAC26C55B18}' />
    </worksheet>
    <worksheet name='Stringency vs Mortality'>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data' name='federated.0gq365107envlq1aak0u00p3afod' />
          </datasources>
          <datasource-dependencies datasource='federated.0gq365107envlq1aak0u00p3afod'>
            <column caption='Mortality Index' datatype='real' name='[Calculation_122723128503132161]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([total_deaths]/[total_cases])*100' />
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Country' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Stringency Index' datatype='real' name='[stringency_index]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_122723128503132161]' derivation='Sum' name='[sum:Calculation_122723128503132161:qk]' pivot='key' type='quantitative' />
            <column-instance column='[stringency_index]' derivation='Sum' name='[sum:stringency_index:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gq365107envlq1aak0u00p3afod].[none:location:nk]' filter-group='5'>
            <groupfilter function='member' level='[none:location:nk]' member='&quot;Belize&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
            <target field='[federated.0gq365107envlq1aak0u00p3afod].[none:location:nk]' />
          </filter>
          <slices>
            <column>[federated.0gq365107envlq1aak0u00p3afod].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0gq365107envlq1aak0u00p3afod].[sum:Calculation_122723128503132161:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.0gq365107envlq1aak0u00p3afod].[sum:Calculation_122723128503132161:qk]' scope='rows' value='false' />
            <format attr='title' class='0' field='[federated.0gq365107envlq1aak0u00p3afod].[sum:stringency_index:qk]' scope='rows' value='Stringency Index and Mortality Index' />
            <format attr='title' class='0' field='[federated.0gq365107envlq1aak0u00p3afod].[tmn:date:qk]' scope='cols' value='' />
            <format attr='width' field='[federated.0gq365107envlq1aak0u00p3afod].[sum:stringency_index:qk]' value='64' />
            <format attr='width' field='[federated.0gq365107envlq1aak0u00p3afod].[sum:Calculation_122723128503132161:qk]' value='64' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0gq365107envlq1aak0u00p3afod].[none:location:nk]' value='false' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0gq365107envlq1aak0u00p3afod].[:Measure Names]' value='Stringency vs Mortality'>
              <formatted-text>
                <run>Stringency vs Mortality</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0gq365107envlq1aak0u00p3afod].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0gq365107envlq1aak0u00p3afod].[sum:stringency_index:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='20.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='true' />
            <encodings>
              <color column='[federated.0gq365107envlq1aak0u00p3afod].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.4832596778869629' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0gq365107envlq1aak0u00p3afod].[sum:Calculation_122723128503132161:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0gq365107envlq1aak0u00p3afod].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0gq365107envlq1aak0u00p3afod].[sum:stringency_index:qk] + [federated.0gq365107envlq1aak0u00p3afod].[sum:Calculation_122723128503132161:qk])</rows>
        <cols>[federated.0gq365107envlq1aak0u00p3afod].[tmn:date:qk]</cols>
      </table>
      <simple-id uuid='{ED1FCF1E-6CB9-46BA-A0F2-563B18F53A9C}' />
    </worksheet>
    <worksheet name='Total Cases'>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data' name='federated.0gq365107envlq1aak0u00p3afod' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0gq365107envlq1aak0u00p3afod'>
            <column caption='Country' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gq365107envlq1aak0u00p3afod].[none:location:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0gq365107envlq1aak0u00p3afod].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0gq365107envlq1aak0u00p3afod].[Longitude (generated)]' field-type='quantitative' max='-18638894.677867927' min='-62388632.846462823' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0gq365107envlq1aak0u00p3afod].[Latitude (generated)]' field-type='quantitative' max='22107005.943522889' min='-15633730.767311806' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0gq365107envlq1aak0u00p3afod].[sum:total_cases:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.0gq365107envlq1aak0u00p3afod].[none:location:nk]' />
              <color column='[federated.0gq365107envlq1aak0u00p3afod].[sum:total_cases:qk]' />
              <geometry column='[federated.0gq365107envlq1aak0u00p3afod].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-transparency' value='255' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0gq365107envlq1aak0u00p3afod].[Latitude (generated)]</rows>
        <cols>[federated.0gq365107envlq1aak0u00p3afod].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{BC25A239-F04C-4824-BFD0-C27094DBA074}' />
    </worksheet>
    <worksheet name='Total Deaths by Country'>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data' name='federated.0gq365107envlq1aak0u00p3afod' />
          </datasources>
          <datasource-dependencies datasource='federated.0gq365107envlq1aak0u00p3afod'>
            <column caption='Rank' datatype='integer' name='[Calculation_122723128484388864]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK_UNIQUE(SUM([total_deaths]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Country' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_122723128484388864]' derivation='User' name='[usr:Calculation_122723128484388864:ok:3]' pivot='key' type='ordinal'>
              <table-calc ordering-field='[federated.0gq365107envlq1aak0u00p3afod].[location]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gq365107envlq1aak0u00p3afod].[none:location:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:location:nk]' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;World&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0gq365107envlq1aak0u00p3afod].[usr:Calculation_122723128484388864:ok:3]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[usr:Calculation_122723128484388864:ok:3]' />
              <groupfilter function='member' level='[usr:Calculation_122723128484388864:ok:3]' member='%null%' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0gq365107envlq1aak0u00p3afod].[usr:Calculation_122723128484388864:ok:3]' direction='ASC'>
            <dictionary>
              <bucket>%null%</bucket>
              <bucket>1</bucket>
              <bucket>2</bucket>
              <bucket>3</bucket>
              <bucket>4</bucket>
              <bucket>5</bucket>
              <bucket>6</bucket>
              <bucket>7</bucket>
              <bucket>8</bucket>
              <bucket>9</bucket>
              <bucket>10</bucket>
              <bucket>11</bucket>
              <bucket>12</bucket>
              <bucket>13</bucket>
              <bucket>14</bucket>
              <bucket>15</bucket>
              <bucket>16</bucket>
              <bucket>17</bucket>
              <bucket>18</bucket>
              <bucket>19</bucket>
              <bucket>20</bucket>
              <bucket>21</bucket>
              <bucket>22</bucket>
              <bucket>23</bucket>
              <bucket>24</bucket>
              <bucket>25</bucket>
              <bucket>26</bucket>
              <bucket>27</bucket>
              <bucket>28</bucket>
              <bucket>29</bucket>
              <bucket>30</bucket>
              <bucket>31</bucket>
              <bucket>32</bucket>
              <bucket>33</bucket>
              <bucket>34</bucket>
              <bucket>35</bucket>
              <bucket>36</bucket>
              <bucket>37</bucket>
              <bucket>38</bucket>
              <bucket>39</bucket>
              <bucket>40</bucket>
              <bucket>41</bucket>
              <bucket>42</bucket>
              <bucket>43</bucket>
              <bucket>44</bucket>
              <bucket>45</bucket>
              <bucket>46</bucket>
              <bucket>47</bucket>
              <bucket>48</bucket>
              <bucket>49</bucket>
              <bucket>50</bucket>
              <bucket>51</bucket>
              <bucket>52</bucket>
              <bucket>53</bucket>
              <bucket>54</bucket>
              <bucket>55</bucket>
              <bucket>56</bucket>
              <bucket>57</bucket>
              <bucket>58</bucket>
              <bucket>59</bucket>
              <bucket>60</bucket>
              <bucket>61</bucket>
              <bucket>62</bucket>
              <bucket>63</bucket>
              <bucket>64</bucket>
              <bucket>65</bucket>
              <bucket>66</bucket>
              <bucket>67</bucket>
              <bucket>68</bucket>
              <bucket>69</bucket>
              <bucket>70</bucket>
              <bucket>71</bucket>
              <bucket>72</bucket>
              <bucket>73</bucket>
              <bucket>74</bucket>
              <bucket>75</bucket>
              <bucket>76</bucket>
              <bucket>77</bucket>
              <bucket>78</bucket>
              <bucket>79</bucket>
              <bucket>80</bucket>
              <bucket>81</bucket>
              <bucket>82</bucket>
              <bucket>83</bucket>
              <bucket>84</bucket>
              <bucket>85</bucket>
              <bucket>86</bucket>
              <bucket>87</bucket>
              <bucket>88</bucket>
              <bucket>89</bucket>
              <bucket>90</bucket>
              <bucket>91</bucket>
              <bucket>92</bucket>
              <bucket>93</bucket>
              <bucket>94</bucket>
              <bucket>95</bucket>
              <bucket>96</bucket>
              <bucket>97</bucket>
              <bucket>98</bucket>
              <bucket>99</bucket>
              <bucket>100</bucket>
              <bucket>101</bucket>
              <bucket>102</bucket>
              <bucket>103</bucket>
              <bucket>104</bucket>
              <bucket>105</bucket>
              <bucket>106</bucket>
              <bucket>107</bucket>
              <bucket>108</bucket>
              <bucket>109</bucket>
              <bucket>110</bucket>
              <bucket>111</bucket>
              <bucket>112</bucket>
              <bucket>113</bucket>
              <bucket>114</bucket>
              <bucket>115</bucket>
              <bucket>116</bucket>
              <bucket>117</bucket>
              <bucket>118</bucket>
              <bucket>119</bucket>
              <bucket>120</bucket>
              <bucket>121</bucket>
              <bucket>122</bucket>
              <bucket>123</bucket>
              <bucket>124</bucket>
              <bucket>125</bucket>
              <bucket>126</bucket>
              <bucket>127</bucket>
              <bucket>128</bucket>
              <bucket>129</bucket>
              <bucket>130</bucket>
              <bucket>131</bucket>
              <bucket>132</bucket>
              <bucket>133</bucket>
              <bucket>134</bucket>
              <bucket>135</bucket>
              <bucket>136</bucket>
              <bucket>137</bucket>
              <bucket>138</bucket>
              <bucket>139</bucket>
              <bucket>140</bucket>
              <bucket>141</bucket>
              <bucket>142</bucket>
              <bucket>143</bucket>
              <bucket>144</bucket>
              <bucket>145</bucket>
              <bucket>146</bucket>
              <bucket>147</bucket>
              <bucket>148</bucket>
              <bucket>149</bucket>
              <bucket>150</bucket>
              <bucket>151</bucket>
              <bucket>152</bucket>
              <bucket>153</bucket>
              <bucket>154</bucket>
              <bucket>155</bucket>
              <bucket>156</bucket>
              <bucket>157</bucket>
              <bucket>158</bucket>
              <bucket>159</bucket>
              <bucket>160</bucket>
              <bucket>161</bucket>
              <bucket>162</bucket>
              <bucket>163</bucket>
              <bucket>164</bucket>
              <bucket>165</bucket>
              <bucket>166</bucket>
              <bucket>167</bucket>
              <bucket>168</bucket>
              <bucket>169</bucket>
              <bucket>170</bucket>
              <bucket>171</bucket>
              <bucket>172</bucket>
              <bucket>173</bucket>
              <bucket>174</bucket>
              <bucket>175</bucket>
              <bucket>176</bucket>
              <bucket>177</bucket>
              <bucket>178</bucket>
              <bucket>179</bucket>
              <bucket>180</bucket>
              <bucket>181</bucket>
              <bucket>182</bucket>
              <bucket>183</bucket>
              <bucket>184</bucket>
              <bucket>185</bucket>
              <bucket>186</bucket>
              <bucket>187</bucket>
              <bucket>188</bucket>
              <bucket>189</bucket>
              <bucket>190</bucket>
              <bucket>191</bucket>
              <bucket>192</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0gq365107envlq1aak0u00p3afod].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gq365107envlq1aak0u00p3afod].[none:location:nk]' />
              <text column='[federated.0gq365107envlq1aak0u00p3afod].[none:location:nk]' />
              <text column='[federated.0gq365107envlq1aak0u00p3afod].[sum:total_deaths:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.0gq365107envlq1aak0u00p3afod].[none:location:nk]</run>
                <run>&gt;:  &lt;</run>
                <run>[federated.0gq365107envlq1aak0u00p3afod].[sum:total_deaths:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0gq365107envlq1aak0u00p3afod].[usr:Calculation_122723128484388864:ok:3]</rows>
        <cols>[federated.0gq365107envlq1aak0u00p3afod].[sum:total_deaths:qk]</cols>
        <pages>
          <column>[federated.0gq365107envlq1aak0u00p3afod].[mn:date:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{25233397-8386-4D96-9C1D-F9458EFD9D55}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Affect on Public'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='owid-covid-data' name='federated.0gq365107envlq1aak0u00p3afod' />
        <datasource caption='COVID Government Response (OxBSG)' name='federated.128ssux0wnpql6161zac70wnnjrf' />
      </datasources>
      <datasource-dependencies datasource='federated.0gq365107envlq1aak0u00p3afod'>
        <column caption='Country' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.128ssux0wnpql6161zac70wnnjrf' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98142' id='7' param='horz' w='99034' x='483' y='929'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='98142' id='5' w='87628' x='483' y='929'>
              <zone h='98142' id='3' name='Government Response Measures to COVID-19' w='46047' x='42064' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49071' id='11' name='Mobility Rate' w='41581' x='483' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49071' id='16' name='Stringency vs Mortality' w='41581' x='483' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='189' h='98142' id='6' is-fixed='true' param='vert' w='11406' x='88111' y='929'>
              <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='7085' id='9' mode='checkdropdown' name='Government Response Measures to COVID-19' param='[federated.128ssux0wnpql6161zac70wnnjrf].[:Measure Names]' w='11406' x='88111' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='13240' id='10' name='Government Response Measures to COVID-19' pane-specification-id='0' param='[federated.128ssux0wnpql6161zac70wnnjrf].[:Measure Names]' w='11406' x='88111' y='8014'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' fixed-size='156' h='19047' id='14' is-fixed='true' name='Mobility Rate' pane-specification-id='1' param='[federated.10bvf8y179bd7314hh6070jvl1is].[:Measure Names]' w='11406' x='88111' y='21254'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='8362' id='18' name='Stringency vs Mortality' pane-specification-id='2' param='[federated.0gq365107envlq1aak0u00p3afod].[:Measure Names]' w='11406' x='88111' y='40301'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='currpage' _.fcp.SetMembershipControl.true...type-v2='currpage' h='13821' id='15' name='Mobility Rate' synchronized='1' w='11406' x='88111' y='48663'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='7085' id='69' mode='dropdown' name='Mobility Rate' param='[federated.0gq365107envlq1aak0u00p3afod].[none:location:nk]' values='database' w='11406' x='88111' y='62484'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1300' minheight='1300' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='83' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98142' id='82' param='vert' w='99034' x='483' y='929'>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='7085' id='69' mode='dropdown' name='Mobility Rate' param='[federated.0gq365107envlq1aak0u00p3afod].[none:location:nk]' values='database' w='11406' x='88111' y='62484'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49071' id='11' is-fixed='true' name='Mobility Rate' w='41581' x='483' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' fixed-size='156' h='19047' id='14' name='Mobility Rate' pane-specification-id='1' param='[federated.10bvf8y179bd7314hh6070jvl1is].[:Measure Names]' w='11406' x='88111' y='21254'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='7085' id='9' mode='checkdropdown' name='Government Response Measures to COVID-19' param='[federated.128ssux0wnpql6161zac70wnnjrf].[:Measure Names]' w='11406' x='88111' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98142' id='3' is-fixed='true' name='Government Response Measures to COVID-19' w='46047' x='42064' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='13240' id='10' name='Government Response Measures to COVID-19' pane-specification-id='0' param='[federated.128ssux0wnpql6161zac70wnnjrf].[:Measure Names]' w='11406' x='88111' y='8014'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49071' id='16' is-fixed='true' name='Stringency vs Mortality' w='41581' x='483' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='8362' id='18' name='Stringency vs Mortality' pane-specification-id='2' param='[federated.0gq365107envlq1aak0u00p3afod].[:Measure Names]' w='11406' x='88111' y='40301'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='currpage' _.fcp.SetMembershipControl.true...type-v2='currpage' h='13821' id='15' name='Mobility Rate' synchronized='1' w='11406' x='88111' y='48663'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{7DC717BC-C7B8-43F8-8DA7-36BE923BB837}' />
    </dashboard>
    <dashboard name='COVID Catalysts'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='owid-covid-data' name='federated.0gq365107envlq1aak0u00p3afod' />
      </datasources>
      <datasource-dependencies datasource='federated.0gq365107envlq1aak0u00p3afod'>
        <column caption='Country' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='63' param='horz' w='98400' x='800' y='1000'>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='56' param='horz' w='82400' x='800' y='1000'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='7' param='horz' w='82400' x='800' y='1000'>
                <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='98000' id='5' w='82400' x='800' y='1000'>
                  <zone h='98000' id='9' name='Factors Influencing COVID-19' w='82400' x='800' y='1000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='160' h='98000' id='62' is-fixed='true' param='vert' w='16000' x='83200' y='1000'>
              <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='7625' id='64' mode='dropdown' name='Factors Influencing COVID-19' param='[federated.0gq365107envlq1aak0u00p3afod].[none:location:nk]' values='database' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='78' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='77' param='vert' w='98400' x='800' y='1000'>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='7625' id='64' mode='dropdown' name='Factors Influencing COVID-19' param='[federated.0gq365107envlq1aak0u00p3afod].[none:location:nk]' values='database' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98000' id='9' is-fixed='true' name='Factors Influencing COVID-19' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{2C68C3B2-19BB-4E09-B56A-A4976FF2CB76}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='89'>
    <window class='worksheet' maximized='true' name='Total Cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0gq365107envlq1aak0u00p3afod].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{EB2F9461-7293-42AB-B941-9C935902CC09}' />
    </window>
    <window class='worksheet' name='New Cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0gq365107envlq1aak0u00p3afod].[none:location:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0gq365107envlq1aak0u00p3afod].[fVal:sum:new_cases:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0gq365107envlq1aak0u00p3afod].[none:location:nk]</field>
            <field>[federated.0gq365107envlq1aak0u00p3afod].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B6888AE6-6826-4250-AE23-0E7D9C20ABA2}' />
    </window>
    <window class='worksheet' name='Total Deaths by Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card looped='1' type='currpage' />
            <card pane-specification-id='2' param='[federated.0gq365107envlq1aak0u00p3afod].[none:location:nk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>8</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.0gq365107envlq1aak0u00p3afod].[none:location:nk]</field>
            <field>[federated.0gq365107envlq1aak0u00p3afod].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0F777874-E3C3-44D9-8649-2D8DAB7B2B74}' />
    </window>
    <window class='worksheet' name='Factors Influencing COVID-19'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0gq365107envlq1aak0u00p3afod].[Multiple Values]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0gq365107envlq1aak0u00p3afod].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C232670C-8B46-4318-822E-6471A47AAFCE}' />
    </window>
    <window class='worksheet' name='Stringency vs Mortality'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0gq365107envlq1aak0u00p3afod].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0gq365107envlq1aak0u00p3afod].[:Measure Names]</field>
            <field>[federated.0gq365107envlq1aak0u00p3afod].[mn:date:ok]</field>
            <field>[federated.0gq365107envlq1aak0u00p3afod].[none:location:nk]</field>
            <field>[federated.0gq365107envlq1aak0u00p3afod].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{09F236D3-E49C-424D-9C68-56B43AC4067B}' />
    </window>
    <window class='worksheet' name='Mobility Rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.10bvf8y179bd7314hh6070jvl1is].[:Measure Names]' show-morefewerbutton='false' type='filter' />
            <card pane-specification-id='1' param='[federated.10bvf8y179bd7314hh6070jvl1is].[:Measure Names]' type='color' />
            <card looped='1' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>6</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.10bvf8y179bd7314hh6070jvl1is].[:Measure Names]</field>
            <field>[federated.10bvf8y179bd7314hh6070jvl1is].[mn:Year:ok]</field>
            <field>[federated.10bvf8y179bd7314hh6070jvl1is].[none:Country:nk]</field>
            <field>[federated.10bvf8y179bd7314hh6070jvl1is].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{94F98E58-0664-4A26-912A-7E11DB12C071}' />
    </window>
    <window class='worksheet' name='Government Response Measures to COVID-19'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.128ssux0wnpql6161zac70wnnjrf].[:Measure Names]' show-morefewerbutton='false' type='filter' />
            <card pane-specification-id='0' param='[federated.128ssux0wnpql6161zac70wnnjrf].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.128ssux0wnpql6161zac70wnnjrf].[:Measure Names]</field>
            <field>[federated.128ssux0wnpql6161zac70wnnjrf].[none:Country:nk]</field>
            <field>[federated.128ssux0wnpql6161zac70wnnjrf].[tmn:Year:ok]</field>
            <field>[federated.128ssux0wnpql6161zac70wnnjrf].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B5590C2C-7C4A-4EAF-81E2-BA851292690B}' />
    </window>
    <window class='dashboard' name='COVID Catalysts'>
      <viewpoints>
        <viewpoint name='Factors Influencing COVID-19'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='64' />
      <simple-id uuid='{7B349EA8-BE58-4C98-920C-57D82D63A447}' />
    </window>
    <window class='worksheet' name='GDP'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0gq365107envlq1aak0u00p3afod].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0gq365107envlq1aak0u00p3afod].[none:location:nk]</field>
            <field>[federated.0gq365107envlq1aak0u00p3afod].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A1C41D36-25FE-4F25-AFFF-061E21EA391D}' />
    </window>
    <window class='dashboard' name='Affect on Public'>
      <viewpoints>
        <viewpoint name='Government Response Measures to COVID-19'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Mobility Rate'>
          <current-page>
            <multibucket>
              <bucket>10</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Stringency vs Mortality'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='69' />
      <simple-id uuid='{E9E7923A-37CA-4A0D-956B-120C1C6C55F8}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Affect on Public' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='COVID Catalysts' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAVJklEQVR4nO3d23Mb6Xnn8S/QOIMgCAI8iCeR0kjUMaORRjNyxvZM7GTXqVQSl33lVK52
      q/xfbJVv9mJvk0pqq/YiVfbWXmzVuJydzGZrZ+yVFU0kjQWSOlEkRfF8AHE+o9HoxrsX8miG
      Jj0RSfCkfj43IpuNBw9I/oRG9/sQDqWUQgibch52A0IcJgmAsDUJgLA1CYCwNQmAsLVNASjl
      UsTjceLxODWz9XeWyWS23f58+glPZxd4NjOzp/rr6+uvvG85n2Z84hH1hgXAyvwzZuaWXvSZ
      SmH9dr9CJo3R/KL3Jo/G40w8fIxhNbfUzCYTGL/dXC6kefDoKU05x3akbQrAzNiv6Tx9jWvX
      ruF3/f4bzcd/yWRC3/Gd3b17b9vtU7MLnH9jmGfPnu245m5kV2e483iJyxfPUiqVuP/ZL6lq
      YaI+k09u3aOyNsnYbBqAX//LbVzOL3o3mJlLcOHMSf7xww+pmV/+do/d+X/817/9e7IGWNU0
      v7o7yZmTXXz0z58eyGMSu/M1v+bwaOxzqvU6yhsl5qmxWjCIdETJLS2RyQZo5yzzT36DNxQl
      U6zyp28P8Tf/8zbBtiBvnuyk4QoQ7uziwpmRTXV/+g//jUtvXmVxLcU3r15gfmGBp7MLL7/+
      4Ycf8sMf/pCP//fHfPe9q3x6Z5KQs0b/5W8x/ut/5PTZS0w/X+RHP/wzPv6nf6a7t5fT568w
      PjaG/0Iv/+tBntFuMD0D9PhKLGUN9MQUF/7df2C4A+7Ep/j3f/EXuIBYp5fP0mXefq8b6KY+
      NsnQN/+EsY9+yfXTfwyad8txoscf4k+un+bzyRXe/4NBAK5+44+oZbMAGOUMgY4eAu0xaFT2
      +jMS+2jLa4AnD+LE4+PUDZ10voTmCbCyPM/04gbvv/cN/uDiWYaGhjh3+S0GeqMU6xbvvHMd
      n1GmCoS6BvmPf/UDOiJhGkYDj8e75U6j3f1cvXoNj9Oiq2+IkeERzr8xvG2DT8fiuEMdtHVG
      WJ1fJNAe5erVq4QDHorLT2g/9TbX33mXztCX93P67EXe/cNrFDbSTC1u8J1v/yHD/T188f/1
      lmt/6nc+dHrRHCYrk/cZuPTO13z7XhwSLa2lNm31d4/S768wNj5OIp37mtuLw7YlABffvMa1
      a29BaYWq1kV/dycAsZCHlXSRbDZLe6SDbCqFZVk0jTq6YVBoWPiB7u5uAHxtndz4xg0ejX2+
      46YcOKiVsqRyZQaGh3BqPi6dv8TZM4Ob9mvrGSGzOIWhlylW6tvWCrlgI18hmUy+3PaNq6N8
      eiuO2aiTzubpiwWZWUqSWZvDG+oC4NJAO//91jxXRqJbapr1CjfHF3n34kkuv3WNob6uLfv0
      DAxzeiDGyOlzO3784gCpryhmk6ra+PLzxedTamUjo9LptFKqqZ5PPVbL62mllFJz00/URqao
      zHpVTYxPqLJuKNWoqnS+rJRSL7aPjalMofKy3os6//a/mcSKmppdePn5xsqCevhkSpnN5pZ9
      S/mUmnj4RDWsF19rVIsqX64rpRoqnc6rpmWqyUcT6lf/9HO1/mUrqphNqvGJh0o3TKWUUstz
      M2r6+eKXO1h19Xx++Xd6t9TDsftq/MEjVTetr37r1POpx+r+/fvq/v37Kl+uq5WFWTU5M6ea
      ShxlDqVe77VAGyvzLCcyaL423rok/xuLzV77AAjxdeRCmLC1lgeg2dx6gUiIo6rlAZAjKnGc
      yCGQsDUJgLA1CYCwNQmAsDUJgLA1CYCwNQmAsLUdB6BYLAKQTqySK1bQK0USKVnye1R9/PHH
      JBIJ4vE4P/3pT3n27Bm/+MUvWFhYwDRNPvroIyYmJg67zUOzowA0GzoPnjwFTBLpIqtL8yws
      r1HJbGDsU4Niby5evIiu61y9epWhoSHOnDlDJBLh5MmTrK6ucuXKFSoV+w7tfO1E2O9yun30
      xCJgNTAMA5fXi9vlxgdYSmE1mzSbTbkafEQopbh79y4+n49iscjo6CiFQgGv14uu6zidTm7f
      vk1PTw+muQ9D4MfAjlaDNvQyT6Zm6T7RTy2fRguEaXMr8jWLN0aGALAsC03T9q1hIVqp5cuh
      JQCHa2phg1J153+w4KtCAR/nhnta1NHRtqNDIHH0/ZeffcL9p0t7qvH2+SH+4T/9dYs6Otrk
      NKiwNQmAsDUJgLA1CYCwNQmAsDUJgLA1CYCwNQmAsDUJgLA1CYCwNQmAsDUJgLC1nQVANXk6
      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
    </thumbnail>
    <thumbnail height='192' name='Factors Influencing COVID-19' width='192'>
      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
      EFdAAiBs7f8B3QwXgzcyHIcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='GDP' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Government Response Measures to COVID-19' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Mobility Rate' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='New Cases' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAUL0lEQVR4nO3d+W8c533H8ffM7L3Lm8v7kkTdsmTHR5w4RxMnduqmRdC0SBP0h6RAkQL9
      I2q0RX5q0AIF+kOBFEVbNwHauLmc2I4dN07s2pZ825JISbxvLve+5nz6A2XFTkhFpHaXS873
      9Qs5FDn7pTifeZ555plnNaWUQgif0ve6ACH2Ul0C4LpuPXYrRM1JCyB8TQIgfE0CIHxNAiB8
      TQIgfE0CIHxNAiB8TQIgfE0CIHxNAiB8TQIgfE0CIHxNAiB8TQIgfE0CIHxNAiB8TQIgfG1H
      AfBcm0wmi+t5VCslqpaNVa3iegrPsaiadr3qFKIuAjv55mq5TKmUZWl5+fpjjxpRTPTOYQKl
      dbJekHMnjtapVCFqb0cBiMVjXLt6lVC8lUR7F24lB8SwK1kUBmFDw/M8PM9DFpsQ+8GOApDL
      pDHCEYxgiEJqCYJxOhMhwo6Nk+jCMMvouo5SCsMw6lWzEDWj1WNdINd1JQBiX5BRIOFrEgDh
      axIA4WsSAOFrEgDhaxIA4WsSAOFrEgDhaxIA4WsSAOFrEgDhaxIA4WsSAOFrEgDhaxIA4WsS
      AOFrEgDhaxIA4WsSAOFrO3ooXimFUgpN026s+qBp2ge+59e3hWhmOwpAKZdmfnkVLRAmn1oj
      OTiKlV4g2DtOoLhCyg7woVPH6lWrEDW3owDEW9swllfoTvZgeBap1DrJtiRmaQNPGcSCuqwL
      JPaVHQVg7uol8ia0Wiae56FpGrqhE3Fs3HinrAsk9h1ZF0j4mowCCV+TAAhfkwAIX5MACF+T
      AAhfkwAIX5MACF+TAAhfkwAIX5MACF+TAAhfkwAIX5MACF+TAAhfkwAIX5MACF+TAAhfkwAI
      X5MACF+TAAhf29m6QPk0M/NLdCT7KaVXIZwg6laI9I4QKG+QsgzGh/vrVasQNbejAEQT7Qz0
      VNnIbBBo6cSr5LHRKa2tojtVXD0g6wKJfWVHAcillsk5QQ6NDnJlfh1l2UTCMXSnhBaMg+vI
      ukBiX9lRAHQjQDm1wUYkTHdLEMIjxIIGOi6uEUa5dr3qFKIuZGEs4WsyCiR8TQIgfE0CIHxN
      AiB8bdtRoPdfG8u7voiDatsAvPbaeZamr9B37F7uPSvv+iIOpm0D4JYyjJ68k0i0pZH1CNFQ
      214DVCoVKpZJpZhtZD1CNNS2AUi0tHLxtQtE2robWY8QDbVtALRIgu62OIV8ppH1CNFQ218D
      lPMcOXsvwaBcA4iDa9sWQCnFm6+8QNltZDlCNNa2AdDDUWKxMOWcdIHEwbXlbNDVlWW6e3px
      KjlSRRjs7djRTmU2qNgvtmwBZq5NkMmXKBayLC6tNLomIRpmyxbAKud58aVXINTCAx+9j6C+
      s6kQ0gKI/WLLUaBQrJX21jgtySECMg1IHGDbXgS3tsQ5/4tneH1irpH1CFF3ynWxL12k+A/f
      3P4+QLFQpK29DUOXGdPiYFBmFevllzCfewYtGifye5/fPgBWtUikrY/RweSNr3mOycWJaU6d
      Ps7Vi+9gxDqIYRHtGSRQyZCydMb6exryywhxK5RSqHwe86knsF69QPDUGeJf/0uMvs31q7YN
      QCabo3WwkyvvTnDvfecAsB0PQwPlWmTzFZIt3VimQ355Bd0p4+pBPK8bz/Ma89sJcRNqdgbz
      ySewlxYIPfAJ4n/1t2jhMLA5UAM3CcDA4DBvvHuRjz/0hRtfC0eimwHQApy96xxXJy8Tj7Wi
      OSW0QBQ8F03T0DQNXbpOYg8oy8R+63XMp36MHksQ/szDxE6dgW1GJbcMwMRbrzA5vUQpl2Z2
      cZWRnlYAitkUFctkdS2NU87S3j1AWzyCrmycQBTlWDcCIE+RiUZRSqFyWawXnsd+4XmMEyeJ
      f+3rGINDv/Vnt7wPsDQ7ycT0Et19w5w5fnjHB7PcBxCN4mXTWD/7KfaFlwh98kGCD3wSPXHr
      Ezi3bAGy6Q2ymQzZTIZILMHRkd6aFSxELbjLS5g/ehxvbobgZz5H4m/+Dm0XJ11ZGU7sO14+
      R/nvv0H4i18hcOI0WmBHK3x+wO5/Uog9oDwP8zv/SuizjxA8c+629ydDNWJfsV/8ORgBgvd/
      vCb7kwCIfcNbW8H+36eJfPlraDUaZpcAiH1B2TbVf//nzYM/FqvZfiUAoukppbCe/D7GiTPo
      h4/WdN8SANH03MlLuNNXCD38+zW/wSoBEE1NFfNY3/8OkS//GVogWPP9SwBE01JKYX73MYKf
      +hx6sj43YyUAoikppXAuvAiaRuDu++v2OhIA0ZTU2jLOc08S/tJXazbkuRUJgGg6yrIw//vf
      CH3xT9HCkbq+lgRANBWlFPYzP8Q4ehLjyPG6v54EQDQVb2oCb26K4KceacjrSQBE01CVMtb3
      /pPQH38VLVj7Ic+tSABEU1Ceh/29xwh++hH0ruRv/4EakQCIpuC+/hJoGsadH27o60oAxJ7z
      1ldw/u85gn/w5YY/S77jAJRKJRRQzGcolk3KxQK26+FaVQrlah1KFAeZcmycH36b0Oe/hBaL
      N/z1d/REWKWY4/U3L3P/fXcws7AKnktEs6FtAKO8QVEFuON4bWfriYNLKYXz3I/Rx46ijR7Z
      kxp2FIBooo2ezjZcyybR3oFXyaERw6pmAYOgruF5Hp7nUYdHjcUBo+an8OanMb7yFzcWqmq0
      HQWgmE2xur5OvLOTcnoVQnE6ExGijocTacc1K+i6jlJKHooXN6XKRewnv0voT/4cLVLfu703
      I6tCiIZTnofzg8fQDx3DONfYUZ9fJ6NAouG8t88DCv2Oe/e6FAmAaCyVSeFd+AWBh/6wrrM8
      b9XeVyB8Q7kuzo++jfHZL6DFEntdDiABEA2ilMJ78afoo0fQhvdmyHMrEgBRd8px8F56FrU8
      h/7Aw021criMAom6UmtLuM/8D9rQYfSPPIgWDO11SR8ga4OKulCWiXf+56i5axgPfgGtd3Cv
      S9qStACippRSqMVpvOd/gjZ+Gv3uj6EZzXuebd7KxL6jbAvvl0/BxirGQ3+E1t387yshLYCo
      CW9hGu/nT6CfvAvtzvvR9P3x95cAiNuiKmW8l5+FfBb9E4+gtXftdUk7IgEQu6I8DzUziffK
      c+hnP4x24ty+Oeu/nwRA7JiqlPBeeAosE/1jv4vW2r7XJe2aXASLW6aUQs1M4L38HPqdH0U7
      frapbmrthrQA4paoYh710rMoFPpHH2qauTy3S1oAcVPK81CTb6PevYD+oY+hjR3b92f995MW
      QGxNKVQpj/fCU2jhGNr9n0aL1O6tiZqFtADiA5RZhbVF1OwV1NoS+j2f2Jy9eYDO+u8nLYDP
      KdeB9DpqeQ61MA2OidY7hNY/Cv2jDVuicK/sOgDVShkPnWBAxzCCoFwcD0LBgASgiSnlQbmE
      WpyBlTlUJoXW2gFDh9B6h6ClDU3zzyz53XWBlM3Fdy/RPzxKcXUGvXuMQGmNjBPkzpOyLlAz
      UUqB6252axamNz/qBtrACNrJD6F1Jpt6slq97TIAOu3tCebm5+nt6MIsZ1DKIBKQdYGagudB
      Lo1amUNfnkOzqtDVi9c3AnfcB8EQN/46CnCcPSx2b+0qAJ7nYtsOwWCIQDBAwLFw4h1osi7Q
      nlHKg8VZ1NxVSK9BohWtbxjufxASbWi6Lo//bUEugg8AZVuoC8+DY6MdOwudyaZ78qpZ+bfz
      d0CoQhb1y6fQjpyE8TNNsdTIfiIB2K+uP3ml3j6Pdu8noav3QN2hbRTpAu1DynXhnVdQ2TTa
      vb+zJ8uKHxQSgH1GmRV4+Tlo74Iz9+zLOfjNRLpA+4haX4bXfgmn70EbHDuw0xMaSQKwHyiF
      mroEc1fhgYfREq17XdGBIV2gJqdsC954cfNsf+4jMrxZY9ICNDFVyMGF52HsKIwdl1GeOpAA
      NCm1OAMTb8G5+9G6eva6nANLukBNRrkuTLwJhexmlycS3euSDjQJQDOplFBvvgztnXDsDhni
      bADpAjUDpSCbgrfOw/GzaH1De12Rb0gA9ppSMDMBy/Nwz8fR4i17XZGvSBdoL9kWvPsqBAJw
      4q7Nj6Kh5H+80ZQCy4S1JVicgf5hGBmXu7p7RFqARnnvoF9d2HwCq6cf+kYgevCWGtlPJAD1
      ZFYhtQKri+DYkOyH3qHNg17O+E1BAlBL73VvNlY3z/aODd19mwd+LCEHfROSANwupcC2IbUM
      a8vg2tDZAz0DctDvAxKA3bKtze7N2vLm5919m/36A7JorF/sKgBKuUxeugShBFGvTLh3jEAp
      Rco2OD46uH8C4HmgvM2zuHf9o/LAe++ju/m5527+u+uCbW6uumBZ0N0LyQHp0+9juxoGdSpF
      wm1JvEoOVw+RS62iOSZKD+B5Hq7rYpomuq7fWCNI07SbbgMYnkdkafpXB+GW1OaBuh3P2+JH
      1AcP9uvbngYKDXX9W5S2+bl3fVsLBEDT8DQNdB09EIJQCK9vFGIJ9OsPoHvlMsCvtq/XsJtt
      TdNwXfeWtt/7P6z19q3+zXa6DWAYRs23lVIopXZV264CYAQClItFcGxikRi6XYJwCzg2uq5j
      GAah0C7mrSsPBkY3P7/Z6gbbnm213/w3DdD0za/r1z9q+uYBvfMKxQGz62uA7MYahBJEAjo6
      Lq4RQrkOsWh0/3SBhO/JRbDwNekFCF+TAAhfkwAIX5MACF+r23RoeX8AsR/UJQDv3XDYqfdu
      UNRSrffped6NG1i3q5lrq4da/r612lddhkF3y/M8NE1r6vVvmvkga+ba3n+3tpk0VQCEaDTj
      0UcffbQeO16cm2JhYREjkiAavoW32lSKVDpNLLb1E1JLc1PMLKyQiAaZmJwkGG0hs3SNElGq
      uTWuTc3S1pUkoN9q62Hy+vm3cfUArS2by4unNlLbvv52XLvK5MQkhYpNNZ9ibjlFIqxz5eoU
      jhYktTTLRqFCR1vbbc2XW1+YpuCGSEQ/OMXEqRYxzQobJZdYUDF5eZJc2cIuZZhZXKMlGmDy
      yjVsZZBenWc9W6azvbXmrWwhs0rFCxMJbX8DNJ9e5+rUNHoowuL0VYqmh1XMMD27QDQe5erE
      BCoQIRGL1KSmTGqZjbxJa2L7v2ndLoLzZZNTp08zcXmC3CoUbI3OeICybRAPK1IbBdo64mQ3
      sigjSFtHko2lKRaXO+nrSrC+tkFrVzeZbIFTJ0/QNzRG6fJF5udXOHrqFPNTc/S3R1ipWFjZ
      PMeP9HBleo3TR/tusUKbfK5M36jG1YlLWARRVoGl+Xl6OjtYzFu0xUMMdiXIVTTSqRUSHZ1k
      lhaJxuP0HTpMdj3N8GAvhw+NMDm7jG0ohtoM8irByGAvS6sr6NEOsPIoFBq7P+gyZRPKy9g5
      jUKxSFd3L7OLywx3xwjGO8hUHHrbOzh8eIzL0wu4AY3R7jBpK8TYUB9Lq+uoYCuaU9p1DTdT
      LWZJl9O4wycprM9QSK/jBOIMdrWwmspy6NgJEu1dDLgma4uLxJIDVLPrDI+PY1ZKLE3PMHDs
      DKnZq/R2tdWkplSmgKcgrYoE2ofJrM9TzOSoKJ1keyudsUB9h0Fd28LFY2ZmAaWgWDE5PDbE
      7MwMuq6wHI2x4QG6+wfRbJvO3gHihmJ6egal61gVi7HDRwgaMHN1guTIOC0RnUqliqs0wuHN
      M8XIYC+XJqaI7vDMkewboqctyszCEiiIxFsZ7u8im8kzOn4Uu1qhWi6wsbpKyXZYXF6mpT3J
      0eNHmHj1PInOLly7wsTUEqeOj+M6LpWqjVVMsZI1GT80gm2ZOPbtvQujZ+ZZXkmzurpGxdM4
      Oj5KIZOhs2+YmOFhu9e/zzGZuDrH6RNHcR2HStXCKWdY2CgzfngUxzZx6vCOkJ7nYdsuBg5V
      yyJfLJNo76I9EWFudmZzhq1SZNaWyNshxkZ6sKomjuOyOHuNSOcgyY44ZqWK49amR65ci7Xl
      FVJra+SKJUzLpJDfIJDoIRKASrlMuZCvXxfIUA4LyykOHx6nvTWKFggz1NPJ4mqaQ6ODVGyN
      /r4k0WiMcDhMLBrBLOWItvcwNtRHsWIzMNBHNBLG0DVymTSZTI7+0VFWFxcZHhthfm4B06wS
      j0Zw9BiHhnt20LTrhMJhorEY8UgAIxyjJayTLcPocD/hcJh4UGM9X2VgsB/Xchgc6KettZVg
      MMBGrsjoUD+uVSGdzVG1PHo6ExScEG0RnWw2gxeIEzdswokuEvHors//lmkxeOgwQ70drK+n
      yJdsDh0eJRIOE4lGCUfixCJhgtik0lnKlktfVws506AjHiCXy+HqYVpDimC8jZZE7Dbaot9U
      KWbJmjpjo8OsLszT09tLW2uCeDxOb0+SsumQ7O6iWi6Qy2YJxjvRzByt3X24ZolsNkdn/zC5
      1Xn6Rw4RCt7+PDLlWnT2jTA62EswmiC1ukpv/xDZlRnSJZujowNkyo5cBO+Ga5tUbEjEwg1/
      bcuydjfVXACKzEaKYLTlxnWGBED4WnMNygrRYBIA0QQUxUIBBZQKBdxtH4eFqmn+xtc8z6NQ
      LIFyyaTTVEzrll9ZAiCagMO//OM3Wcpb/NM3/pr5XIF33nqTUtVk+splJqbmePrxx3j54jQ/
      ePy/ePfyFZSCcn6Ddy5dYWrqXX7yizfATPH4D37GMz95go1cjgsXXmUjtci3vvUfpHN53nz9
      DarvDZldV7dRICFuncf6+hql1ALZcpiquUHv8DjnX3qBmdk1MhvLtEfCHL37fqYmLuEV0iQP
      H+fZp5+mP+6yqFq568wdtAQqzKdcxpMaKzmHwvoM02mXqB7EXrvCUrlMKusxNpi88crSAogm
      oNGeHGZlJcfdZ8cYHBpi6vJFevqH6OrqJJGI09uX5OrkNbo6u4gnEmga9HW1cm05T393K4YO
      aAbp5Vlms5BwC+iJdhLhOLpXJNqZxNATHD30wRulMgokfE1aAOFr/w9nZIy8Ra4iMAAAAABJ
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Stringency vs Mortality' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total Cases' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Total Deaths by Country' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
